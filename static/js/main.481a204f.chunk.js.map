{"version":3,"sources":["components/button.js","components/scoreInput.js","components/playerName.js","components/tableHead.js","components/tableBottom.js","components/scoreRow.js","index.js"],"names":["StyledButton","styled","button","_templateObject","props","allowClick","Button","handleClick","_this","onClick","react_default","a","createElement","this","label","React","Component","Input","input","scoreInput_templateObject","valid","ScoreInput","state","value","placeholder","handleChange","event","_ref","gameState","_ref2","Object","slicedToArray","min","max","val","Number","target","isNaN","setState","onChange","id","handleBlur","handleFocus","type","onFocus","onBlur","playerName_templateObject","editing","PlayerName","name","select","playerName_Input","data-tip","data-for","title","HeaderCell","td","tableHead_templateObject","TableHead","width","playerName_PlayerName","playerNames","tableBottom_templateObject","TableBottom","sum","i","processedScores","length","tableBottom_HeaderCell","GameCell","scoreRow_templateObject","CallSpan","span","_templateObject2","ScoreSpan","_templateObject3","negative","ScoreRow","gameNumber","callValue","bg","fc","fs","map","el","calls","style","backgroundColor","color","fontStyle","InputCell","src_templateObject","ErrorDiv","div","src_templateObject2","error","App","round","ongoingRound","roundComplete","p1","p2","p3","p4","errorMessages","rounds","playerCalls","playerScores","newRound","isValid","ar","minimum","maximum","total","inputType","allErrorMessages","check","push","some","isInteger","reduce","b","forEach","processScores","hands","gameCount","order","handleScoreInput","procScores","r","ind","onPlayerNameChange","findIndex","undefined","console","log","concat","names","handleCallInput","_this$state","userInput","playerNum","defineProperty","rows","scoreRow_ScoreRow","key","uuid","v4","className","maxWidth","marginTop","Helmet","charSet","rel","sizes","href","display","alignItems","height","textAlign","textDecoration","textDecorationColor","minHeight","justifyContent","button_Button","tableHead_TableHead","border","fontSize","scoreInput_ScoreInput","tableBottom_TableBottom","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"kmBAGA,IAAMA,EAAeC,IAAOC,OAAVC,IAMI,SAAAC,GAAK,OAAKA,EAAMC,WAAa,UAAY,QAO7C,SAAAD,GAAK,OAAKA,EAAMC,WAAa,QAAU,QAC3C,SAAAD,GAAK,OAAKA,EAAMC,WAAa,UAAY,SAIlCC,6MACnBC,YAAc,WACZC,EAAKJ,MAAMK,mFAIX,OACEC,EAAAC,EAAAC,cAACZ,EAAD,CACES,QAASI,KAAKN,YACdF,WAAYQ,KAAKT,MAAMC,YAEtBQ,KAAKT,MAAMU,cAXgBC,IAAMC,6RClB1C,IAAMC,EAAQhB,IAAOiB,MAAVC,IAQW,SAAAf,GAAK,OAAKA,EAAMgB,MAAQ,YAAc,YAMvCC,6MACnBC,MAAQ,CAAEC,MAAO,GAAIC,YAAa,IAAKJ,OAAO,KAC9CK,aAAe,SAAAC,GAAS,IAAAC,EACsB,SAAzBnB,EAAKJ,MAAMwB,UAAuB,CAAC,EAAG,GAAK,CAAC,EAAG,IAD5CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACfK,EADeH,EAAA,GACVI,EADUJ,EAAA,GAEhBK,EAAMC,OAAOT,EAAMU,OAAOb,OAC5BW,EAAMF,GAAOE,EAAMD,GAAOI,MAAMH,GAClC1B,EAAK8B,SAAS,CAAElB,OAAO,IAEvBZ,EAAK8B,SAAS,CAAElB,OAAO,IAEzBZ,EAAK8B,SAAS,CAAEf,MAAOG,EAAMU,OAAOb,QACpCf,EAAKJ,MAAMmC,SAAS/B,EAAKJ,MAAMoC,GAAId,EAAMU,OAAOb,UAElDkB,WAAa,WACXjC,EAAK8B,SAAS,CAAEd,YAAa,SAE/BkB,YAAc,WACZlC,EAAK8B,SAAS,CAAEd,YAAa,KAC7BhB,EAAK8B,SAAS,CAAEf,MAAO,8EAGvB,OACEb,EAAAC,EAAAC,cAACK,EAAD,CACEuB,GAAI3B,KAAKT,MAAMoC,GACfG,KAAK,MACLnB,YAAaX,KAAKS,MAAME,YACxBD,MAAOV,KAAKS,MAAMC,MAClBgB,SAAU1B,KAAKY,aACfmB,QAAS/B,KAAK6B,YACdG,OAAQhC,KAAK4B,WACbrB,MAAOP,KAAKS,MAAMF,eA9BcL,IAAMC,gUCd9C,IAAMC,EAAQhB,IAAOiB,MAAV4B,IASA,SAAA1C,GAAK,OAAKA,EAAM2C,QAAU,QAAU,WACzB,SAAA3C,GAAK,OAAKA,EAAM2C,QAAU,YAAc,SAEhD,SAAA3C,GAAK,OAAKA,EAAM2C,QAAU,UAAY,YAI/BC,6MACnB1B,MAAQ,CACNC,MAAOf,EAAKJ,MAAM6C,KAClBF,SAAS,KAGXtB,aAAe,SAAAC,GACblB,EAAK8B,SAAS,CAAEf,MAAOG,EAAMU,OAAOb,OAAS,WAC3Cf,EAAKJ,MAAMmC,SAAS/B,EAAKJ,MAAMoC,GAAIhC,EAAKc,MAAMC,YAGlDmB,YAAc,SAAAhB,GACZA,EAAMU,OAAOc,SACb1C,EAAK8B,SAAS,CAAES,SAAS,OAE3BN,WAAa,SAAAf,GACXlB,EAAK8B,SAAS,CAAES,SAAS,6EAGzB,OACErC,EAAAC,EAAAC,cAACuC,EAAD,CACEC,YAAA,EACAC,WAAS,sBACTd,SAAU1B,KAAKY,aACfmB,QAAS/B,KAAK6B,YACdG,OAAQhC,KAAK4B,WACblB,MAAOV,KAAKS,MAAMC,MAClBwB,QAASlC,KAAKS,MAAMyB,QACpBO,MAAM,yBA5B0BvC,IAAMC,+HCd9C,IAAMuC,EAAatD,IAAOuD,GAAVC,KAKKC,6MACnBnB,SAAW,SAACC,EAAIS,GACdzC,EAAKJ,MAAMmC,SAASC,EAAIS,4EAGxB,OACEvC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC2C,EAAD,CAAYI,MAAM,OAChBjD,EAAAC,EAAAC,cAAA,uBAEFF,EAAAC,EAAAC,cAAC2C,EAAD,KACE7C,EAAAC,EAAAC,cAACgD,EAAD,CACEpB,GAAG,UACHS,KAAMpC,KAAKT,MAAMyD,YAAY,GAC7BtB,SAAU1B,KAAK0B,YAGnB7B,EAAAC,EAAAC,cAAC2C,EAAD,KACE7C,EAAAC,EAAAC,cAACgD,EAAD,CACEpB,GAAG,UACHS,KAAMpC,KAAKT,MAAMyD,YAAY,GAC7BtB,SAAU1B,KAAK0B,YAGnB7B,EAAAC,EAAAC,cAAC2C,EAAD,KACE7C,EAAAC,EAAAC,cAACgD,EAAD,CACEpB,GAAG,UACHS,KAAMpC,KAAKT,MAAMyD,YAAY,GAC7BtB,SAAU1B,KAAK0B,YAGnB7B,EAAAC,EAAAC,cAAC2C,EAAD,KACE7C,EAAAC,EAAAC,cAACgD,EAAD,CACEpB,GAAG,UACHS,KAAMpC,KAAKT,MAAMyD,YAAY,GAC7BtB,SAAU1B,KAAK0B,qBApCUxB,IAAMC,uKCN7C,IAAMuC,EAAatD,IAAOuD,GAAVM,KAOKC,mLAGjB,IADA,IAAIC,EAAM,CAAC,EAAG,EAAG,EAAG,GACXC,EAAI,EAAGA,EAAIpD,KAAKT,MAAM8D,gBAAgBC,OAAQF,IACrDD,EAAI,GAAK7B,OAAO6B,EAAI,IAAM7B,OAAOtB,KAAKT,MAAM8D,gBAAgBD,GAAG,IAC/DD,EAAI,GAAK7B,OAAO6B,EAAI,IAAM7B,OAAOtB,KAAKT,MAAM8D,gBAAgBD,GAAG,IAC/DD,EAAI,GAAK7B,OAAO6B,EAAI,IAAM7B,OAAOtB,KAAKT,MAAM8D,gBAAgBD,GAAG,IAC/DD,EAAI,GAAK7B,OAAO6B,EAAI,IAAM7B,OAAOtB,KAAKT,MAAM8D,gBAAgBD,GAAG,IAEjE,OACEvD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACwD,EAAD,CAAYT,MAAM,OAChBjD,EAAAC,EAAAC,cAAA,wBAEFF,EAAAC,EAAAC,cAACwD,EAAD,KACE1D,EAAAC,EAAAC,cAAA,cAASoD,EAAI,KAEftD,EAAAC,EAAAC,cAACwD,EAAD,KACE1D,EAAAC,EAAAC,cAAA,cAASoD,EAAI,KAEftD,EAAAC,EAAAC,cAACwD,EAAD,KACE1D,EAAAC,EAAAC,cAAA,cAASoD,EAAI,KAEftD,EAAAC,EAAAC,cAACwD,EAAD,KACE1D,EAAAC,EAAAC,cAAA,cAASoD,EAAI,aAxBkBjD,IAAMC,4fCP/C,IAAMqD,EAAWpE,IAAOuD,GAAVc,KAKRC,EAAWtE,IAAOuE,KAAVC,KAQRC,EAAYzE,IAAOuE,KAAVG,IAKJ,SAAAvE,GAAK,OAAKA,EAAMwE,SAAW,UAAY,WAC/B,SAAAxE,GAAK,OAAKA,EAAMwE,SAAW,MAAQ,YAGjCC,mLAEjB,IAAIZ,EAAIpD,KAAKT,MAAM0E,WACf5C,EAAM,GACN6C,EAAY,GACZC,EAAK,UACLC,EAAK,QACLC,EAAK,OACLN,EAAW,GAuBf,OAtBI/D,KAAKT,MAAM8D,gBAAgBD,IAC7B/B,EAAMrB,KAAKT,MAAM8D,gBAAgBD,GACjCW,EAAW/D,KAAKT,MAAM8D,gBAAgBD,GAAGkB,IAAI,SAAAC,GAAE,OAAIA,EAAK,IACxDL,EAAYlE,KAAKT,MAAMiF,MAAMpB,KAE7B/B,EAAMrB,KAAKT,MAAMiF,MAAMpB,GACvBc,EAAY,CAAC,GAAI,GAAI,GAAI,IACzBC,EAAK,UACLC,EAAK,QACLC,EAAK,UAcLxE,EAAAC,EAAAC,cAAA,MAAI0E,MAAO,CAAEC,gBAAiBP,EAAIQ,MAAOP,EAAIQ,UAAWP,IACtDxE,EAAAC,EAAAC,cAACyD,EAAD,KACG,CAAC,IAAK,KAAM,MAAO,KAAM,SAASxD,KAAKT,MAAM0E,aAGhDpE,EAAAC,EAAAC,cAACyD,EAAD,KACE3D,EAAAC,EAAAC,cAAC2D,EAAD,KAAWQ,EAAU,IACrBrE,EAAAC,EAAAC,cAAC8D,EAAD,CAAWE,SAAUA,EAAS,IAAK1C,EAAI,KAEzCxB,EAAAC,EAAAC,cAACyD,EAAD,KACE3D,EAAAC,EAAAC,cAAC2D,EAAD,KAAWQ,EAAU,IACrBrE,EAAAC,EAAAC,cAAC8D,EAAD,CAAWE,SAAUA,EAAS,IAAK1C,EAAI,KAEzCxB,EAAAC,EAAAC,cAACyD,EAAD,KACE3D,EAAAC,EAAAC,cAAC2D,EAAD,KAAWQ,EAAU,IACrBrE,EAAAC,EAAAC,cAAC8D,EAAD,CAAWE,SAAUA,EAAS,IAAK1C,EAAI,KAEzCxB,EAAAC,EAAAC,cAACyD,EAAD,KACE3D,EAAAC,EAAAC,cAAC2D,EAAD,KAAWQ,EAAU,IACrBrE,EAAAC,EAAAC,cAAC8D,EAAD,CAAWE,SAAUA,EAAS,IAAK1C,EAAI,aAnDXnB,IAAMC,yTCb5C,IAAM0E,EAAYzF,IAAOuD,GAAVmC,KAMTC,EAAW3F,IAAO4F,IAAVC,IAED,SAAA1F,GAAK,OAAKA,EAAM2F,MAAQ,QAAU,SAG1BC,6MACnB1E,MAAQ,CACN2E,MAAO,EACPC,aAAc,EACdC,eAAe,EACfrB,WAAY,EACZlD,UAAW,OACXd,MAAO,eACP+C,YAAa,CAAC,KAAM,KAAM,KAAM,MAChCuC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJlG,YAAY,EACZ0F,OAAO,EACPS,cAAe,MAEjBC,OAAS,CAAEL,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,MACvCG,YAAc,KACdC,aAAe,KACfzC,gBAAkB,KAElB0C,SAAW,WACTpG,EAAK8B,SAAS,CACZ4D,aAAc1F,EAAKc,MAAM6E,cACrB3F,EAAKc,MAAM4E,aAAe,EAC1B1F,EAAKc,MAAM4E,aACfD,MAAOzF,EAAKc,MAAM2E,MAAQ,EAC1BE,eAAe,EACfrB,WAAY,EACZlD,UAAW,OACXd,MAAO,eACPsF,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJlG,YAAY,EACZmG,cAAe,GACfT,OAAO,IAETvF,EAAKkG,YAAc,GACnBlG,EAAKmG,aAAe,GACpBnG,EAAK0D,gBAAkB,MAGzB2C,QAAU,SAAAC,GAAM,IAAAnF,EAEa,SAAzBnB,EAAKc,MAAMM,UAAuB,CAAC,EAAG,EAAG,IAAM,CAAC,EAAG,GAAI,IAF3CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACToF,EADSlF,EAAA,GACAmF,EADAnF,EAAA,GACSoF,EADTpF,EAAA,GAGVqF,EAAqC,SAAzB1G,EAAKc,MAAMM,UAAuB,QAAU,QACxDuF,EAAmB,CACrB,kBAAoBD,EAAY,uBAChC,kBACEA,EACA,8BACAH,EACA,IACF,kBAAoBG,EAAY,yBAA2BF,EAAU,IAC5C,SAAzBxG,EAAKc,MAAMM,UACP,uCAAyCqF,EAAQ,IACjD,uCAEFG,EAAQ,GACRZ,EAAgB,GAiBpB,OAhBAY,EAAMC,KAAKP,EAAGQ,KAAK,SAAAlC,GAAE,OAAKjD,OAAOoF,UAAUpF,OAAOiD,OAClDgC,EAAMC,KAAKP,EAAGQ,KAAK,SAAAlC,GAAE,OAAIjD,OAAOiD,GAAM2B,KACtCK,EAAMC,KAAKP,EAAGQ,KAAK,SAAAlC,GAAE,OAAIjD,OAAOiD,GAAM4B,KAET,SAAzBxG,EAAKc,MAAMM,UACbwF,EAAMC,KAAKP,EAAGU,OAAO,SAAC7G,EAAG8G,GAAJ,OAAUtF,OAAOxB,GAAKwB,OAAOsF,IAAI,GAAKR,GAE3DG,EAAMC,KAAKP,EAAGU,OAAO,SAAC7G,EAAG8G,GAAJ,OAAUtF,OAAOxB,GAAKwB,OAAOsF,IAAI,KAAOR,GAG/DG,EAAMM,QAAQ,SAACtC,EAAInB,GACbmB,GACFoB,EAAca,KAAKF,EAAiBlD,MAGxCzD,EAAK8B,SAAS,CAAEkE,cAAeA,KACvBY,EAAME,KAAK,SAAAlC,GAAE,OAAIA,OAG3BuC,cAAgB,SAACC,EAAOvC,GAEtB,IADA,IAAInB,EAAkB,GACbD,EAAI,EAAGA,EAAI2D,EAAMzD,OAAQF,IAC5B9B,OAAOyF,EAAM3D,KAAO9B,OAAOkD,EAAMpB,IACnCC,EAAgBD,GACdoB,EAAMpB,GAAK,KAAO9B,OAAOyF,EAAM3D,IAAM9B,OAAOkD,EAAMpB,KAEpDC,EAAgBD,IAAM,EAAI9B,OAAOkD,EAAMpB,IAG3C,OAAOC,KAGT2D,UAAY,IACZC,MAAQ,CAAC,KAAM,KAAM,KAAM,QAC3BC,iBAAmB,SAAAjB,GACjB,GAAItG,EAAKqG,QAAQC,GAAK,CACpBtG,EAAK8B,SAAS,CAAEwC,WAAYtE,EAAKc,MAAMwD,WAAa,EAAGiB,OAAO,IAC9D,IAAIiC,EAAaxH,EAAKmH,cACpBb,EACAtG,EAAKkG,YAAYlG,EAAKkG,YAAYvC,OAAS,IAI7C,GAFA3D,EAAKmG,aAAaU,KAAKP,GACvBtG,EAAK0D,gBAAgBmD,KAAKW,GACtBxH,EAAKc,MAAMwD,WAAatE,EAAKqH,UAAY,EAC3CrH,EAAK8B,SAAS,CAAExB,MAAO,sBAEvBN,EAAK8B,SAAS,CACZxB,MAAO,gBACPqF,eAAe,EACf9F,YAAY,IAGDG,EAAK0D,gBAAgBsD,OAChC,SAACS,EAAGtH,GAAJ,OAAUA,EAAEwE,IAAI,SAACsC,EAAGxD,GAAJ,OAAU9B,OAAO8F,EAAEhE,IAAM,GAAK9B,OAAOsF,MACrD,IAEKtC,IAAI,SAACjD,EAAKgG,GAAN,OAAc1H,EAAKiG,OAAOjG,EAAKsH,MAAMI,IAAMb,KAAKnF,KAE7D1B,EAAK8B,SAAS,CAAEV,UAAW,cAE3BpB,EAAK8B,SAAS,CAAEyD,OAAO,OAI3BoC,mBAAqB,SAAC3F,EAAIS,GACxB,IAAIiF,EAAM,CAAC,UAAW,UAAW,UAAW,WAAWE,UACrD,SAAAhD,GAAE,OAAIA,IAAO5C,IAEf,GAAc,KAATS,OAAyBoF,IAATpF,EACnBqF,QAAQC,IAAItF,GACZqF,QAAQC,IAAR,0BAAAC,OAAsCN,EAAM,EAA5C,kBACK,CACL,IAAIO,EAAQjI,EAAKc,MAAMuC,YACvB4E,EAAMP,GAAOjF,EACbzC,EAAK8B,SAAS,CAAEuB,YAAa4E,QAIjCC,gBAAkB,SAAA5B,GACZtG,EAAKqG,QAAQC,IACftG,EAAK8B,SAAS,CACZV,UAAW,OACXd,MAAO,eACPiF,OAAO,IAETvF,EAAKkG,YAAYW,KAAKP,IAEtBtG,EAAK8B,SAAS,CAAEyD,OAAO,OAI3BxF,YAAc,WACZ,GAAyB,kBAArBC,EAAKc,MAAMR,MAAf,CADkB,IAAA6H,EAISnI,EAAKc,MAC1BsH,EAAY,CALAD,EAIVvC,GAJUuC,EAINtC,GAJMsC,EAIFrC,GAJEqC,EAIEpC,IAEK,SAAzB/F,EAAKc,MAAMM,UACPpB,EAAKkI,gBAAgBE,GACrBpI,EAAKuH,iBAAiBa,OAG5BnH,aAAe,SAACoH,EAAWtH,GACzBf,EAAK8B,SAALR,OAAAgH,EAAA,EAAAhH,CAAA,GAAiB+G,EAAYtH,6EAM7B,IAFA,IAAIwH,EAAO,GAEF9E,EAAI,EAAGA,EAAIpD,KAAK6F,YAAYvC,OAAQF,IAC3C8E,EAAK1B,KACH3G,EAAAC,EAAAC,cAACoI,EAAD,CACEC,IAAKC,IAAKC,KACVrE,WAAYb,EACZoB,MAAOxE,KAAK6F,YACZxC,gBAAiBrD,KAAKqD,mBAM5B,IADA,IAAIiD,EAAmB,GACdlD,EAAI,EAAGA,EAAIpD,KAAKS,MAAMkF,cAAcrC,OAAQF,IACnDkD,EAAiBE,KACf3G,EAAAC,EAAAC,cAAA,MAAIqI,IAAKC,IAAKC,MAAOtI,KAAKS,MAAMkF,cAAcvC,KAIlD,OACEvD,EAAAC,EAAAC,cAAA,OAAKwI,UAAU,MAAM9D,MAAO,CAAE+D,SAAU,QAASC,UAAW,QAC1D5I,EAAAC,EAAAC,cAAC2I,EAAA,OAAD,KACE7I,EAAAC,EAAAC,cAAA,QAAM4I,QAAQ,UACd9I,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,QACE6I,IAAI,mBACJC,MAAM,UACNC,KAAK,kCAEPjJ,EAAAC,EAAAC,cAAA,QACE6I,IAAI,OACJ9G,KAAK,YACL+G,MAAM,QACNC,KAAK,+BAEPjJ,EAAAC,EAAAC,cAAA,QACE6I,IAAI,OACJ9G,KAAK,YACL+G,MAAM,QACNC,KAAK,+BAEPjJ,EAAAC,EAAAC,cAAA,QAAM6I,IAAI,WAAWE,KAAK,+BAE5BjJ,EAAAC,EAAAC,cAAA,UACE0E,MAAO,CACLsE,QAAS,OACTC,WAAY,WACZC,OAAQ,OACRC,UAAW,OACXpG,MAAO,SAGTjD,EAAAC,EAAAC,cAAA,uBACa,IACXF,EAAAC,EAAAC,cAAA,QACE0E,MAAO,CACL0E,eAAgB,YAChBC,oBAAqB,YAHzB,aAUJvJ,EAAAC,EAAAC,cAAA,OAAK0E,MAAO,CAAE4E,UAAW,wBACvBxJ,EAAAC,EAAAC,cAAA,OAAK0E,MAAO,CAAEsE,QAAS,OAAQO,eAAgB,WAC7CzJ,EAAAC,EAAAC,cAACwJ,EAAD,CACEtJ,MAAOD,KAAKS,MAAMR,MAClBT,WAAYQ,KAAKS,MAAMjB,WACvBI,QAASI,KAAKN,cAEhBG,EAAAC,EAAAC,cAACwJ,EAAD,CACEtJ,MAAM,YACNT,YAAY,EACZI,QAASI,KAAK+F,YAGlBlG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAACyJ,EAAD,CACExG,YAAahD,KAAKS,MAAMuC,YACxBtB,SAAU1B,KAAKsH,qBAEjBzH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,MAAIqI,IAAK,QAAUpI,KAAKS,MAAM2E,OAC5BvF,EAAAC,EAAAC,cAAA,MAAI0E,MAAO,CAAEyE,UAAW,SAAUO,OAAQ,oBAA1C,UACU,IACR5J,EAAAC,EAAAC,cAAA,QAAM0E,MAAO,CAAEiF,SAAU,UAAzB,IACG7J,EAAAC,EAAAC,cAAA,kBAAUC,KAAKS,MAAM4E,cADxB,MAIFxF,EAAAC,EAAAC,cAAC8E,EAAD,KACEhF,EAAAC,EAAAC,cAAC4J,EAAD,CACEhI,GAAG,KACHZ,UAAWf,KAAKS,MAAMM,UACtBW,SAAU1B,KAAKY,gBAGnBf,EAAAC,EAAAC,cAAC8E,EAAD,KACEhF,EAAAC,EAAAC,cAAC4J,EAAD,CACEhI,GAAG,KACHZ,UAAWf,KAAKS,MAAMM,UACtBW,SAAU1B,KAAKY,gBAGnBf,EAAAC,EAAAC,cAAC8E,EAAD,KACEhF,EAAAC,EAAAC,cAAC4J,EAAD,CACEhI,GAAG,KACHZ,UAAWf,KAAKS,MAAMM,UACtBW,SAAU1B,KAAKY,gBAGnBf,EAAAC,EAAAC,cAAC8E,EAAD,KACEhF,EAAAC,EAAAC,cAAC4J,EAAD,CACEhI,GAAG,KACHZ,UAAWf,KAAKS,MAAMM,UACtBW,SAAU1B,KAAKY,iBAIpBsH,EACDrI,EAAAC,EAAAC,cAAC6J,EAAD,CAAavG,gBAAiBrD,KAAKqD,oBAGvCxD,EAAAC,EAAAC,cAACgF,EAAD,CAAUG,MAAOlF,KAAKS,MAAMyE,OAC1BrF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,UAAKuG,KAGTzG,EAAAC,EAAAC,cAAA,UAAQ0E,MAAO,CAAEwE,OAAQ,OAAQC,UAAW,WAA5C,WACUrJ,EAAAC,EAAAC,cAAA,KAAG+I,KAAK,gCAAR,oBA7Se5I,IAAMC,WAoTjC0J,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOpK,EAAAC,EAAAC,cAACmK,EAAD,MAASL","file":"static/js/main.481a204f.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  border: 1px solid black;\n  outline: none;\n  padding: 5px;\n  color: white;\n  border-radius: 5px;\n  background-color: ${props => (props.allowClick ? \"#166730\" : \"gray\")};\n  font-size: 1em;\n  width: 120px;\n  height: 50px;\n  margin-right: 20px;\n  margin-left: 20px;\n  &:hover {\n    background: ${props => (props.allowClick ? \"green\" : \"gray\")};\n    cursor: ${props => (props.allowClick ? \"pointer\" : \"none\")};\n  }\n`;\n\nexport default class Button extends React.Component {\n  handleClick = () => {\n    this.props.onClick();\n  };\n\n  render() {\n    return (\n      <StyledButton\n        onClick={this.handleClick}\n        allowClick={this.props.allowClick}\n      >\n        {this.props.label}\n      </StyledButton>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = styled.input`\n  text-align: center;\n  border: none;\n  width: 97%;\n  height: 80%;\n  margin: auto;\n  display: block;\n  font-size: 1em;\n  background-color: ${props => (props.valid ? \"#286cc440\" : \"#d75d5d\")};\n  &:focus {\n    outline: solid 1px #2962ff;\n  }\n`;\n\nexport default class ScoreInput extends React.Component {\n  state = { value: \"\", placeholder: \"0\", valid: true };\n  handleChange = event => {\n    const [min, max] = this.props.gameState === \"call\" ? [1, 8] : [0, 13];\n    const val = Number(event.target.value);\n    if (val < min || val > max || isNaN(val)) {\n      this.setState({ valid: false });\n    } else {\n      this.setState({ valid: true });\n    }\n    this.setState({ value: event.target.value });\n    this.props.onChange(this.props.id, event.target.value);\n  };\n  handleBlur = () => {\n    this.setState({ placeholder: \"0\" });\n  };\n  handleFocus = () => {\n    this.setState({ placeholder: \"\" });\n    this.setState({ value: \"\" });\n  };\n  render() {\n    return (\n      <Input\n        id={this.props.id}\n        type=\"tel\"\n        placeholder={this.state.placeholder}\n        value={this.state.value}\n        onChange={this.handleChange}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        valid={this.state.valid}\n      />\n    );\n  }\n}\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  text-align: center;\r\n  outline: none;\r\n  border: none;\r\n  width: calc(100% - 10px);\r\n  padding: 5px;\r\n  height: 30px;\r\n  font-size: 1em;\r\n  font-weight: 700;\r\n  color: ${props => (props.editing ? \"black\" : \"#2962ff\")};\r\n  background-color: ${props => (props.editing ? \"#286cc440\" : \"white\")};\r\n  &:hover {\r\n    cursor: ${props => (props.editing ? \"initial\" : \"pointer\")};\r\n  }\r\n`;\r\n\r\nexport default class PlayerName extends React.Component {\r\n  state = {\r\n    value: this.props.name,\r\n    editing: false\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ value: event.target.value }, () => {\r\n      this.props.onChange(this.props.id, this.state.value);\r\n    });\r\n  };\r\n  handleFocus = event => {\r\n    event.target.select();\r\n    this.setState({ editing: true });\r\n  };\r\n  handleBlur = event => {\r\n    this.setState({ editing: false });\r\n  };\r\n  render() {\r\n    return (\r\n      <Input\r\n        data-tip\r\n        data-for=\"change-name-message\"\r\n        onChange={this.handleChange}\r\n        onFocus={this.handleFocus}\r\n        onBlur={this.handleBlur}\r\n        value={this.state.value}\r\n        editing={this.state.editing}\r\n        title=\"Click to edit\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport PlayerName from \"./playerName\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderCell = styled.td`\r\n  text-align: center;\r\n  border: 1px solid;\r\n`;\r\n\r\nexport default class TableHead extends React.Component {\r\n  onChange = (id, name) => {\r\n    this.props.onChange(id, name);\r\n  };\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          <HeaderCell width=\"100\">\r\n            <strong>Game</strong>\r\n          </HeaderCell>\r\n          <HeaderCell>\r\n            <PlayerName\r\n              id=\"p1-name\"\r\n              name={this.props.playerNames[0]}\r\n              onChange={this.onChange}\r\n            />\r\n          </HeaderCell>\r\n          <HeaderCell>\r\n            <PlayerName\r\n              id=\"p2-name\"\r\n              name={this.props.playerNames[1]}\r\n              onChange={this.onChange}\r\n            />\r\n          </HeaderCell>\r\n          <HeaderCell>\r\n            <PlayerName\r\n              id=\"p3-name\"\r\n              name={this.props.playerNames[2]}\r\n              onChange={this.onChange}\r\n            />\r\n          </HeaderCell>\r\n          <HeaderCell>\r\n            <PlayerName\r\n              id=\"p4-name\"\r\n              name={this.props.playerNames[3]}\r\n              onChange={this.onChange}\r\n            />\r\n          </HeaderCell>\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nconst HeaderCell = styled.td`\n  text-align: center;\n  padding: 3px;\n  height: 35px;\n  border: solid 1px black;\n`;\n\nexport default class TableBottom extends React.Component {\n  render() {\n    let sum = [0, 0, 0, 0];\n    for (let i = 0; i < this.props.processedScores.length; i++) {\n      sum[0] = Number(sum[0]) + Number(this.props.processedScores[i][0]);\n      sum[1] = Number(sum[1]) + Number(this.props.processedScores[i][1]);\n      sum[2] = Number(sum[2]) + Number(this.props.processedScores[i][2]);\n      sum[3] = Number(sum[3]) + Number(this.props.processedScores[i][3]);\n    }\n    return (\n      <tr>\n        <HeaderCell width=\"120\">\n          <strong>Total</strong>\n        </HeaderCell>\n        <HeaderCell>\n          <strong>{sum[0]}</strong>\n        </HeaderCell>\n        <HeaderCell>\n          <strong>{sum[1]}</strong>\n        </HeaderCell>\n        <HeaderCell>\n          <strong>{sum[2]}</strong>\n        </HeaderCell>\n        <HeaderCell>\n          <strong>{sum[3]}</strong>\n        </HeaderCell>\n      </tr>\n    );\n  }\n}\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nconst GameCell = styled.td`\n  text-align: center;\n  padding: 3px;\n`;\n\nconst CallSpan = styled.span`\n  margin-right: 0.6em;\n  font-size: 0.9em;\n  text-decoration: line-through;\n  font-style: italic;\n  color: #e6ee9c;\n`;\n\nconst ScoreSpan = styled.span`\n  font-size: 1em;\n  font-weight: 700;\n  padding-left: 2px;\n  padding-right: 2px;\n  color: ${props => (props.negative ? \"#ff7070\" : \"inherit\")};\n  border-radius: ${props => (props.negative ? \"2px\" : \"inherit\")};\n`;\n\nexport default class ScoreRow extends React.Component {\n  render() {\n    let i = this.props.gameNumber;\n    let val = [];\n    let callValue = [];\n    let bg = \"#1976d2\";\n    let fc = \"white\";\n    let fs = \"none\";\n    let negative = [];\n    if (this.props.processedScores[i]) {\n      val = this.props.processedScores[i];\n      negative = this.props.processedScores[i].map(el => el < 0);\n      callValue = this.props.calls[i];\n    } else {\n      val = this.props.calls[i];\n      callValue = [\"\", \"\", \"\", \"\"];\n      bg = \"#bbdefb\";\n      fc = \"black\";\n      fs = \"italic\";\n    }\n\n    /*let scores = [];    \n    for (let ind = 0; ind < 4; i++) {\n      scores.push(\n        <GameCell>\n          <CallSpan>{callValue[ind]}</CallSpan>\n          <ScoreSpan negative={negative[ind]}>{val[ind]}</ScoreSpan>\n        </GameCell>\n      );\n    }*/\n\n    return (\n      <tr style={{ backgroundColor: bg, color: fc, fontStyle: fs }}>\n        <GameCell>\n          {[\"i\", \"ii\", \"iii\", \"iv\", \"Final\"][this.props.gameNumber]}\n        </GameCell>\n\n        <GameCell>\n          <CallSpan>{callValue[0]}</CallSpan>\n          <ScoreSpan negative={negative[0]}>{val[0]}</ScoreSpan>\n        </GameCell>\n        <GameCell>\n          <CallSpan>{callValue[1]}</CallSpan>\n          <ScoreSpan negative={negative[1]}>{val[1]}</ScoreSpan>\n        </GameCell>\n        <GameCell>\n          <CallSpan>{callValue[2]}</CallSpan>\n          <ScoreSpan negative={negative[2]}>{val[2]}</ScoreSpan>\n        </GameCell>\n        <GameCell>\n          <CallSpan>{callValue[3]}</CallSpan>\n          <ScoreSpan negative={negative[3]}>{val[3]}</ScoreSpan>\n        </GameCell>\n      </tr>\n    );\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./components/button\";\r\nimport ScoreInput from \"./components/scoreInput\";\r\nimport TableHead from \"./components/tableHead\";\r\nimport TableBottom from \"./components/tableBottom\";\r\nimport ScoreRow from \"./components/scoreRow\";\r\nimport uuid from \"uuid\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst InputCell = styled.td`\r\n  min-width: 50px;\r\n  height: 30px;\r\n  border: 1px solid;\r\n`;\r\n\r\nconst ErrorDiv = styled.div`\r\n  color: red;\r\n  display: ${props => (props.error ? \"block\" : \"none\")};\r\n`;\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    round: 0,\r\n    ongoingRound: 1,\r\n    roundComplete: false,\r\n    gameNumber: 0,\r\n    gameState: \"call\",\r\n    label: \"Record Calls\",\r\n    playerNames: [\"p1\", \"p2\", \"p3\", \"p4\"],\r\n    p1: 0,\r\n    p2: 0,\r\n    p3: 0,\r\n    p4: 0,\r\n    allowClick: true,\r\n    error: false,\r\n    errorMessages: []\r\n  };\r\n  rounds = { p1: [], p2: [], p3: [], p4: [] };\r\n  playerCalls = [];\r\n  playerScores = [];\r\n  processedScores = [];\r\n\r\n  newRound = () => {\r\n    this.setState({\r\n      ongoingRound: this.state.roundComplete\r\n        ? this.state.ongoingRound + 1\r\n        : this.state.ongoingRound,\r\n      round: this.state.round + 1,\r\n      roundComplete: false,\r\n      gameNumber: 0,\r\n      gameState: \"call\",\r\n      label: \"Record Calls\",\r\n      p1: 0,\r\n      p2: 0,\r\n      p3: 0,\r\n      p4: 0,\r\n      allowClick: true,\r\n      errorMessages: [],\r\n      error: false\r\n    });\r\n    this.playerCalls = [];\r\n    this.playerScores = [];\r\n    this.processedScores = [];\r\n  };\r\n\r\n  isValid = ar => {\r\n    let [minimum, maximum, total] =\r\n      this.state.gameState === \"call\" ? [1, 8, 32] : [0, 13, 13];\r\n    let inputType = this.state.gameState === \"call\" ? \"calls\" : \"hands\";\r\n    let allErrorMessages = [\r\n      \"each input for \" + inputType + \" must be an integer.\",\r\n      \"each input for \" +\r\n        inputType +\r\n        \" must be greater than than \" +\r\n        minimum +\r\n        \".\",\r\n      \"each input for \" + inputType + \" must be smaller than \" + maximum + \".\",\r\n      this.state.gameState === \"call\"\r\n        ? \"total of calls must be smaller than \" + total + \".\"\r\n        : \"total of hands must be equal to 13.\"\r\n    ];\r\n    let check = [];\r\n    let errorMessages = [];\r\n    check.push(ar.some(el => !Number.isInteger(Number(el))));\r\n    check.push(ar.some(el => Number(el) < minimum));\r\n    check.push(ar.some(el => Number(el) > maximum));\r\n\r\n    if (this.state.gameState === \"call\") {\r\n      check.push(ar.reduce((a, b) => Number(a) + Number(b), 0) > total);\r\n    } else {\r\n      check.push(ar.reduce((a, b) => Number(a) + Number(b), 0) !== total);\r\n    }\r\n\r\n    check.forEach((el, i) => {\r\n      if (el) {\r\n        errorMessages.push(allErrorMessages[i]);\r\n      }\r\n    });\r\n    this.setState({ errorMessages: errorMessages });\r\n    return !check.some(el => el);\r\n  };\r\n\r\n  processScores = (hands, calls) => {\r\n    let processedScores = [];\r\n    for (let i = 0; i < hands.length; i++) {\r\n      if (Number(hands[i]) >= Number(calls[i])) {\r\n        processedScores[i] =\r\n          calls[i] + \".\" + (Number(hands[i]) - Number(calls[i]));\r\n      } else {\r\n        processedScores[i] = -1 * Number(calls[i]);\r\n      }\r\n    }\r\n    return processedScores;\r\n  };\r\n\r\n  gameCount = 5;\r\n  order = [\"p1\", \"p2\", \"p3\", \"p4\"];\r\n  handleScoreInput = ar => {\r\n    if (this.isValid(ar)) {\r\n      this.setState({ gameNumber: this.state.gameNumber + 1, error: false });\r\n      let procScores = this.processScores(\r\n        ar,\r\n        this.playerCalls[this.playerCalls.length - 1]\r\n      );\r\n      this.playerScores.push(ar);\r\n      this.processedScores.push(procScores);\r\n      if (this.state.gameNumber < this.gameCount - 1) {\r\n        this.setState({ label: \"Record Calls\" });\r\n      } else {\r\n        this.setState({\r\n          label: \"Round Over!!!\",\r\n          roundComplete: true,\r\n          allowClick: false\r\n        });\r\n\r\n        let totals = this.processedScores.reduce(\r\n          (r, a) => a.map((b, i) => Number(r[i] || 0) + Number(b)),\r\n          []\r\n        );\r\n        totals.map((val, ind) => this.rounds[this.order[ind]].push(val));\r\n      }\r\n      this.setState({ gameState: \"call\" });\r\n    } else {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  onPlayerNameChange = (id, name) => {\r\n    let ind = [\"p1-name\", \"p2-name\", \"p3-name\", \"p4-name\"].findIndex(\r\n      el => el === id\r\n    );\r\n    if ((name === \"\") | (name === undefined)) {\r\n      console.log(name);\r\n      console.log(`Player name for player ${ind + 1} is empty`);\r\n    } else {\r\n      let names = this.state.playerNames;\r\n      names[ind] = name;\r\n      this.setState({ playerNames: names });\r\n    }\r\n  };\r\n\r\n  handleCallInput = ar => {\r\n    if (this.isValid(ar)) {\r\n      this.setState({\r\n        gameState: \"play\",\r\n        label: \"Record Hands\",\r\n        error: false\r\n      });\r\n      this.playerCalls.push(ar);\r\n    } else {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  handleClick = () => {\r\n    if (this.state.label === \"Round Over!!!\") {\r\n      return;\r\n    }\r\n    const { p1, p2, p3, p4 } = this.state;\r\n    const userInput = [p1, p2, p3, p4];\r\n    this.state.gameState === \"call\"\r\n      ? this.handleCallInput(userInput)\r\n      : this.handleScoreInput(userInput);\r\n  };\r\n\r\n  handleChange = (playerNum, value) => {\r\n    this.setState({ [playerNum]: value });\r\n  };\r\n\r\n  render() {\r\n    let rows = [];\r\n\r\n    for (let i = 0; i < this.playerCalls.length; i++) {\r\n      rows.push(\r\n        <ScoreRow\r\n          key={uuid.v4()}\r\n          gameNumber={i}\r\n          calls={this.playerCalls}\r\n          processedScores={this.processedScores}\r\n        />\r\n      );\r\n    }\r\n\r\n    let allErrorMessages = [];\r\n    for (let i = 0; i < this.state.errorMessages.length; i++) {\r\n      allErrorMessages.push(\r\n        <li key={uuid.v4()}>{this.state.errorMessages[i]}</li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\" style={{ maxWidth: \"900px\", marginTop: \"5px\" }}>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Callbreak</title>\r\n          <link\r\n            rel=\"apple-touch-icon\"\r\n            sizes=\"180x180\"\r\n            href=\"./images/apple-touch-icon.png\"\r\n          />\r\n          <link\r\n            rel=\"icon\"\r\n            type=\"image/png\"\r\n            sizes=\"32x32\"\r\n            href=\"./images/favicon-32x32.png\"\r\n          />\r\n          <link\r\n            rel=\"icon\"\r\n            type=\"image/png\"\r\n            sizes=\"16x16\"\r\n            href=\"./images/favicon-16x16.png\"\r\n          />\r\n          <link rel=\"manifest\" href=\"./images/site.webmanifest\" />\r\n        </Helmet>\r\n        <header\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"flex-end\",\r\n            height: \"60px\",\r\n            textAlign: \"left\",\r\n            width: \"100%\"\r\n          }}\r\n        >\r\n          <h1>\r\n            Call Break{\" \"}\r\n            <span\r\n              style={{\r\n                textDecoration: \"underline\",\r\n                textDecorationColor: \"#b71c1c\"\r\n              }}\r\n            >\r\n              &#x2660; {/*spade ♠*/}\r\n            </span>\r\n          </h1>\r\n        </header>\r\n        <div style={{ minHeight: \"calc(100vh - 150px)\" }}>\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Button\r\n              label={this.state.label}\r\n              allowClick={this.state.allowClick}\r\n              onClick={this.handleClick}\r\n            />\r\n            <Button\r\n              label=\"New Round\"\r\n              allowClick={true}\r\n              onClick={this.newRound}\r\n            />\r\n          </div>\r\n          <hr />\r\n          <table>\r\n            <TableHead\r\n              playerNames={this.state.playerNames}\r\n              onChange={this.onPlayerNameChange}\r\n            />\r\n            <tbody>\r\n              <tr key={\"Round\" + this.state.round}>\r\n                <td style={{ textAlign: \"center\", border: \"solid 1px black\" }}>\r\n                  Ongoing{\" \"}\r\n                  <span style={{ fontSize: \"0.7em\" }}>\r\n                    (<i>Round {this.state.ongoingRound}</i>)\r\n                  </span>\r\n                </td>\r\n                <InputCell>\r\n                  <ScoreInput\r\n                    id=\"p1\"\r\n                    gameState={this.state.gameState}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </InputCell>\r\n                <InputCell>\r\n                  <ScoreInput\r\n                    id=\"p2\"\r\n                    gameState={this.state.gameState}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </InputCell>\r\n                <InputCell>\r\n                  <ScoreInput\r\n                    id=\"p3\"\r\n                    gameState={this.state.gameState}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </InputCell>\r\n                <InputCell>\r\n                  <ScoreInput\r\n                    id=\"p4\"\r\n                    gameState={this.state.gameState}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </InputCell>\r\n              </tr>\r\n              {rows}\r\n              <TableBottom processedScores={this.processedScores} />\r\n            </tbody>\r\n          </table>\r\n          <ErrorDiv error={this.state.error}>\r\n            <h3>The input is not valid.</h3>\r\n            <ul>{allErrorMessages}</ul>\r\n          </ErrorDiv>\r\n        </div>\r\n        <footer style={{ height: \"60px\", textAlign: \"center\" }}>\r\n          Made by <a href=\"https://www.darshanbaral.com\">Darshan</a>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}