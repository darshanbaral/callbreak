{"version":3,"sources":["components/button.js","components/scoreInput.js","components/playerName.js","components/tableHead.js","components/tableBottom.js","components/scoreRow.js","index.js"],"names":["StyledButton","styled","button","_templateObject","props","allowClick","Button","handleClick","_this","onClick","react_default","a","createElement","this","label","React","Component","Input","input","scoreInput_templateObject","valid","ScoreInput","state","value","placeholder","handleChange","event","_ref","gameState","_ref2","Object","slicedToArray","min","max","val","Number","target","isNaN","setState","onChange","id","handleBlur","handleFocus","type","onFocus","onBlur","playerName_templateObject","editing","PlayerName","name","select","playerName_Input","data-tip","data-for","title","HeaderCell","td","tableHead_templateObject","TableHead","width","playerName_PlayerName","playerNames","tableBottom_templateObject","TableBottom","ongoingScoreSum","processedScores","reduce","r","map","b","i","Math","round","tableBottom_HeaderCell","GameCell","scoreRow_templateObject","CallSpan","span","_templateObject2","ScoreSpan","_templateObject3","negative","ScoreRow","gameNumber","callValue","bg","fc","fs","el","calls","style","backgroundColor","color","fontStyle","InputCell","src_templateObject","ErrorDiv","div","src_templateObject2","error","App","ongoingRound","roundComplete","p1","p2","p3","p4","errorMessages","rounds","playerCalls","playerScores","newRound","isValid","ar","minimum","maximum","total","inputType","allErrorMessages","check","push","some","isInteger","forEach","processScores","hands","length","gameCount","order","handleScoreInput","procScores","ind","onPlayerNameChange","findIndex","undefined","console","log","concat","names","handleCallInput","_this$state","userInput","playerNum","defineProperty","rows","scoreRow_ScoreRow","key","uuid","v4","className","maxWidth","marginTop","Helmet","charSet","rel","sizes","href","display","alignItems","height","textAlign","minHeight","justifyContent","button_Button","tableHead_TableHead","border","fontSize","scoreInput_ScoreInput","tableBottom_TableBottom","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.ada94dcd.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  border: 1px solid black;\n  outline: none;\n  padding: 5px;\n  color: white;\n  border-radius: 5px;\n  background-color: ${props => (props.allowClick ? \"#166730\" : \"gray\")};\n  font-size: 1em;\n  width: 120px;\n  height: 50px;\n  margin-right: 20px;\n  margin-left: 20px;\n  &:hover {\n    background: ${props => (props.allowClick ? \"green\" : \"gray\")};\n    cursor: ${props => (props.allowClick ? \"pointer\" : \"none\")};\n  }\n`;\n\nexport default class Button extends React.Component {\n  handleClick = () => {\n    this.props.onClick();\n  };\n\n  render() {\n    return (\n      <StyledButton\n        onClick={this.handleClick}\n        allowClick={this.props.allowClick}\n      >\n        {this.props.label}\n      </StyledButton>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = styled.input`\n  text-align: center;\n  border: none;\n  width: 97%;\n  height: 80%;\n  margin: auto;\n  display: block;\n  font-size: 1em;\n  background-color: ${props => (props.valid ? \"#286cc440\" : \"#d75d5d\")};\n  &:focus {\n    outline: solid 1px #2962ff;\n  }\n`;\n\nexport default class ScoreInput extends React.Component {\n  state = { value: \"\", placeholder: \"0\", valid: true };\n  handleChange = event => {\n    const [min, max] = this.props.gameState === \"call\" ? [1, 8] : [0, 13];\n    const val = Number(event.target.value);\n    if (val < min || val > max || isNaN(val)) {\n      this.setState({ valid: false });\n    } else {\n      this.setState({ valid: true });\n    }\n    this.setState({ value: event.target.value });\n    this.props.onChange(this.props.id, event.target.value);\n  };\n  handleBlur = () => {\n    this.setState({ placeholder: \"0\" });\n  };\n  handleFocus = () => {\n    this.setState({ placeholder: \"\" });\n    this.setState({ value: \"\" });\n  };\n  render() {\n    return (\n      <Input\n        id={this.props.id}\n        type=\"tel\"\n        placeholder={this.state.placeholder}\n        value={this.state.value}\n        onChange={this.handleChange}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        valid={this.state.valid}\n      />\n    );\n  }\n}\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  text-align: center;\r\n  outline: none;\r\n  border: none;\r\n  width: calc(100% - 10px);\r\n  padding: 5px;\r\n  height: 30px;\r\n  font-size: 1em;\r\n  font-weight: 700;\r\n  color: ${props => (props.editing ? \"black\" : \"#2962ff\")};\r\n  background-color: ${props => (props.editing ? \"#286cc440\" : \"white\")};\r\n  &:hover {\r\n    cursor: ${props => (props.editing ? \"initial\" : \"pointer\")};\r\n  }\r\n`;\r\n\r\nexport default class PlayerName extends React.Component {\r\n  state = {\r\n    value: this.props.name,\r\n    editing: false\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ value: event.target.value }, () => {\r\n      this.props.onChange(this.props.id, this.state.value);\r\n    });\r\n  };\r\n  handleFocus = event => {\r\n    event.target.select();\r\n    this.setState({ editing: true });\r\n  };\r\n  handleBlur = event => {\r\n    this.setState({ editing: false });\r\n  };\r\n  render() {\r\n    return (\r\n      <Input\r\n        data-tip\r\n        data-for=\"change-name-message\"\r\n        onChange={this.handleChange}\r\n        onFocus={this.handleFocus}\r\n        onBlur={this.handleBlur}\r\n        value={this.state.value}\r\n        editing={this.state.editing}\r\n        title=\"Click to edit\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport PlayerName from \"./playerName\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderCell = styled.td`\r\n  text-align: center;\r\n  border: 1px solid;\r\n`;\r\n\r\nexport default class TableHead extends React.Component {\r\n  onChange = (id, name) => {\r\n    this.props.onChange(id, name);\r\n  };\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          <HeaderCell width=\"100\">\r\n            <strong>Game</strong>\r\n          </HeaderCell>\r\n          <HeaderCell>\r\n            <PlayerName\r\n              id=\"p1-name\"\r\n              name={this.props.playerNames[0]}\r\n              onChange={this.onChange}\r\n            />\r\n          </HeaderCell>\r\n          <HeaderCell>\r\n            <PlayerName\r\n              id=\"p2-name\"\r\n              name={this.props.playerNames[1]}\r\n              onChange={this.onChange}\r\n            />\r\n          </HeaderCell>\r\n          <HeaderCell>\r\n            <PlayerName\r\n              id=\"p3-name\"\r\n              name={this.props.playerNames[2]}\r\n              onChange={this.onChange}\r\n            />\r\n          </HeaderCell>\r\n          <HeaderCell>\r\n            <PlayerName\r\n              id=\"p4-name\"\r\n              name={this.props.playerNames[3]}\r\n              onChange={this.onChange}\r\n            />\r\n          </HeaderCell>\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nconst HeaderCell = styled.td`\n  text-align: center;\n  padding: 3px;\n  height: 35px;\n  border: solid 1px black;\n`;\n\nexport default class TableBottom extends React.Component {\n  render() {\n    let ongoingScoreSum = this.props.processedScores.reduce(\n      (r, a) =>\n        a.map((b, i) => Math.round((Number(r[i] || 0) + Number(b)) * 10) / 10),\n      []\n    );\n\n    return (\n      <tr>\n        <HeaderCell width=\"120\">\n          <strong>Total</strong>\n        </HeaderCell>\n        <HeaderCell>\n          <strong>{ongoingScoreSum[0]}</strong>\n        </HeaderCell>\n        <HeaderCell>\n          <strong>{ongoingScoreSum[1]}</strong>\n        </HeaderCell>\n        <HeaderCell>\n          <strong>{ongoingScoreSum[2]}</strong>\n        </HeaderCell>\n        <HeaderCell>\n          <strong>{ongoingScoreSum[3]}</strong>\n        </HeaderCell>\n      </tr>\n    );\n  }\n}\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nconst GameCell = styled.td`\n  text-align: center;\n  padding: 3px;\n`;\n\nconst CallSpan = styled.span`\n  margin-right: 0.6em;\n  font-size: 0.9em;\n  text-decoration: line-through;\n  font-style: italic;\n  color: #e6ee9c;\n`;\n\nconst ScoreSpan = styled.span`\n  font-size: 1em;\n  font-weight: 700;\n  padding-left: 2px;\n  padding-right: 2px;\n  color: ${props => (props.negative ? \"#ff7070\" : \"inherit\")};\n  border-radius: ${props => (props.negative ? \"2px\" : \"inherit\")};\n`;\n\nexport default class ScoreRow extends React.Component {\n  render() {\n    let i = this.props.gameNumber;\n    let val = [];\n    let callValue = [];\n    let bg = \"#1976d2\";\n    let fc = \"white\";\n    let fs = \"none\";\n    let negative = [];\n    if (this.props.processedScores[i]) {\n      val = this.props.processedScores[i];\n      negative = this.props.processedScores[i].map(el => el < 0);\n      callValue = this.props.calls[i];\n    } else {\n      val = this.props.calls[i];\n      callValue = [\"\", \"\", \"\", \"\"];\n      bg = \"#bbdefb\";\n      fc = \"black\";\n      fs = \"italic\";\n    }\n\n    /*let scores = [];    \n    for (let ind = 0; ind < 4; i++) {\n      scores.push(\n        <GameCell>\n          <CallSpan>{callValue[ind]}</CallSpan>\n          <ScoreSpan negative={negative[ind]}>{val[ind]}</ScoreSpan>\n        </GameCell>\n      );\n    }*/\n\n    return (\n      <tr style={{ backgroundColor: bg, color: fc, fontStyle: fs }}>\n        <GameCell>\n          {[\"i\", \"ii\", \"iii\", \"iv\", \"Final\"][this.props.gameNumber]}\n        </GameCell>\n\n        <GameCell>\n          <CallSpan>{callValue[0]}</CallSpan>\n          <ScoreSpan negative={negative[0]}>{val[0]}</ScoreSpan>\n        </GameCell>\n        <GameCell>\n          <CallSpan>{callValue[1]}</CallSpan>\n          <ScoreSpan negative={negative[1]}>{val[1]}</ScoreSpan>\n        </GameCell>\n        <GameCell>\n          <CallSpan>{callValue[2]}</CallSpan>\n          <ScoreSpan negative={negative[2]}>{val[2]}</ScoreSpan>\n        </GameCell>\n        <GameCell>\n          <CallSpan>{callValue[3]}</CallSpan>\n          <ScoreSpan negative={negative[3]}>{val[3]}</ScoreSpan>\n        </GameCell>\n      </tr>\n    );\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./components/button\";\r\nimport ScoreInput from \"./components/scoreInput\";\r\nimport TableHead from \"./components/tableHead\";\r\nimport TableBottom from \"./components/tableBottom\";\r\nimport ScoreRow from \"./components/scoreRow\";\r\nimport uuid from \"uuid\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst InputCell = styled.td`\r\n  min-width: 50px;\r\n  height: 30px;\r\n  border: 1px solid;\r\n`;\r\n\r\nconst ErrorDiv = styled.div`\r\n  color: red;\r\n  display: ${props => (props.error ? \"block\" : \"none\")};\r\n`;\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    round: 0,\r\n    ongoingRound: 1,\r\n    roundComplete: false,\r\n    gameNumber: 0,\r\n    gameState: \"call\",\r\n    label: \"Record Calls\",\r\n    playerNames: [\"p1\", \"p2\", \"p3\", \"p4\"],\r\n    p1: 0,\r\n    p2: 0,\r\n    p3: 0,\r\n    p4: 0,\r\n    allowClick: true,\r\n    error: false,\r\n    errorMessages: []\r\n  };\r\n  rounds = { p1: [], p2: [], p3: [], p4: [] };\r\n  playerCalls = [];\r\n  playerScores = [];\r\n  processedScores = [];\r\n\r\n  newRound = () => {\r\n    this.setState({\r\n      ongoingRound: this.state.roundComplete\r\n        ? this.state.ongoingRound + 1\r\n        : this.state.ongoingRound,\r\n      round: this.state.round + 1,\r\n      roundComplete: false,\r\n      gameNumber: 0,\r\n      gameState: \"call\",\r\n      label: \"Record Calls\",\r\n      p1: 0,\r\n      p2: 0,\r\n      p3: 0,\r\n      p4: 0,\r\n      allowClick: true,\r\n      errorMessages: [],\r\n      error: false\r\n    });\r\n    this.playerCalls = [];\r\n    this.playerScores = [];\r\n    this.processedScores = [];\r\n  };\r\n\r\n  isValid = ar => {\r\n    let [minimum, maximum, total] =\r\n      this.state.gameState === \"call\" ? [1, 8, 32] : [0, 13, 13];\r\n    let inputType = this.state.gameState === \"call\" ? \"calls\" : \"hands\";\r\n    let allErrorMessages = [\r\n      \"each input for \" + inputType + \" must be an integer.\",\r\n      \"each input for \" +\r\n        inputType +\r\n        \" must be greater than than \" +\r\n        minimum +\r\n        \".\",\r\n      \"each input for \" + inputType + \" must be smaller than \" + maximum + \".\",\r\n      this.state.gameState === \"call\"\r\n        ? \"total of calls must be smaller than \" + total + \".\"\r\n        : \"total of hands must be equal to 13.\"\r\n    ];\r\n    let check = [];\r\n    let errorMessages = [];\r\n    check.push(ar.some(el => !Number.isInteger(Number(el))));\r\n    check.push(ar.some(el => Number(el) < minimum));\r\n    check.push(ar.some(el => Number(el) > maximum));\r\n\r\n    if (this.state.gameState === \"call\") {\r\n      check.push(ar.reduce((a, b) => Number(a) + Number(b), 0) > total);\r\n    } else {\r\n      check.push(ar.reduce((a, b) => Number(a) + Number(b), 0) !== total);\r\n    }\r\n\r\n    check.forEach((el, i) => {\r\n      if (el) {\r\n        errorMessages.push(allErrorMessages[i]);\r\n      }\r\n    });\r\n    this.setState({ errorMessages: errorMessages });\r\n    return !check.some(el => el);\r\n  };\r\n\r\n  processScores = (hands, calls) => {\r\n    let processedScores = [];\r\n    for (let i = 0; i < hands.length; i++) {\r\n      if (Number(hands[i]) >= Number(calls[i])) {\r\n        processedScores[i] =\r\n          calls[i] + \".\" + (Number(hands[i]) - Number(calls[i]));\r\n      } else {\r\n        processedScores[i] = -1 * Number(calls[i]);\r\n      }\r\n    }\r\n    return processedScores;\r\n  };\r\n\r\n  gameCount = 5;\r\n  order = [\"p1\", \"p2\", \"p3\", \"p4\"];\r\n  handleScoreInput = ar => {\r\n    if (this.isValid(ar)) {\r\n      this.setState({ gameNumber: this.state.gameNumber + 1, error: false });\r\n      let procScores = this.processScores(\r\n        ar,\r\n        this.playerCalls[this.playerCalls.length - 1]\r\n      );\r\n      this.playerScores.push(ar);\r\n      this.processedScores.push(procScores);\r\n      if (this.state.gameNumber < this.gameCount - 1) {\r\n        this.setState({ label: \"Record Calls\" });\r\n      } else {\r\n        this.setState({\r\n          label: \"Round Over!!!\",\r\n          roundComplete: true,\r\n          allowClick: false\r\n        });\r\n\r\n        let totals = this.processedScores.reduce(\r\n          (r, a) =>\r\n            a.map(\r\n              (b, i) => Math.round((Number(r[i] || 0) + Number(b)) * 10) / 10\r\n            ),\r\n          []\r\n        );\r\n        totals.map((val, ind) => this.rounds[this.order[ind]].push(val));\r\n      }\r\n      this.setState({ gameState: \"call\" });\r\n    } else {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  onPlayerNameChange = (id, name) => {\r\n    let ind = [\"p1-name\", \"p2-name\", \"p3-name\", \"p4-name\"].findIndex(\r\n      el => el === id\r\n    );\r\n    if ((name === \"\") | (name === undefined)) {\r\n      console.log(name);\r\n      console.log(`Player name for player ${ind + 1} is empty`);\r\n    } else {\r\n      let names = this.state.playerNames;\r\n      names[ind] = name;\r\n      this.setState({ playerNames: names });\r\n    }\r\n  };\r\n\r\n  handleCallInput = ar => {\r\n    if (this.isValid(ar)) {\r\n      this.setState({\r\n        gameState: \"play\",\r\n        label: \"Record Hands\",\r\n        error: false\r\n      });\r\n      this.playerCalls.push(ar);\r\n    } else {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  handleClick = () => {\r\n    if (this.state.label === \"Round Over!!!\") {\r\n      return;\r\n    }\r\n    const { p1, p2, p3, p4 } = this.state;\r\n    const userInput = [p1, p2, p3, p4];\r\n    this.state.gameState === \"call\"\r\n      ? this.handleCallInput(userInput)\r\n      : this.handleScoreInput(userInput);\r\n  };\r\n\r\n  handleChange = (playerNum, value) => {\r\n    this.setState({ [playerNum]: value });\r\n  };\r\n\r\n  render() {\r\n    let rows = [];\r\n\r\n    for (let i = 0; i < this.playerCalls.length; i++) {\r\n      rows.push(\r\n        <ScoreRow\r\n          key={uuid.v4()}\r\n          gameNumber={i}\r\n          calls={this.playerCalls}\r\n          processedScores={this.processedScores}\r\n        />\r\n      );\r\n    }\r\n\r\n    let allErrorMessages = [];\r\n    for (let i = 0; i < this.state.errorMessages.length; i++) {\r\n      allErrorMessages.push(\r\n        <li key={uuid.v4()}>{this.state.errorMessages[i]}</li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\" style={{ maxWidth: \"900px\", marginTop: \"5px\" }}>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Callbreak</title>\r\n          <link\r\n            rel=\"apple-touch-icon\"\r\n            sizes=\"180x180\"\r\n            href=\"./images/apple-touch-icon.png\"\r\n          />\r\n          <link\r\n            rel=\"icon\"\r\n            type=\"image/png\"\r\n            sizes=\"32x32\"\r\n            href=\"./images/favicon-32x32.png\"\r\n          />\r\n          <link\r\n            rel=\"icon\"\r\n            type=\"image/png\"\r\n            sizes=\"16x16\"\r\n            href=\"./images/favicon-16x16.png\"\r\n          />\r\n          <link rel=\"manifest\" href=\"./images/site.webmanifest\" />\r\n        </Helmet>\r\n        <header\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"flex-end\",\r\n            height: \"60px\",\r\n            textAlign: \"left\",\r\n            width: \"100%\"\r\n          }}\r\n        >\r\n          <h1>\r\n            Call Break <sup>&#x2660; {/*spade ♠*/}</sup>\r\n          </h1>\r\n        </header>\r\n        <div style={{ minHeight: \"calc(100vh - 150px)\" }}>\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Button\r\n              label={this.state.label}\r\n              allowClick={this.state.allowClick}\r\n              onClick={this.handleClick}\r\n            />\r\n            <Button\r\n              label=\"New Round\"\r\n              allowClick={true}\r\n              onClick={this.newRound}\r\n            />\r\n          </div>\r\n          <hr />\r\n          <table>\r\n            <TableHead\r\n              playerNames={this.state.playerNames}\r\n              onChange={this.onPlayerNameChange}\r\n            />\r\n            <tbody>\r\n              <tr key={\"Round\" + this.state.round}>\r\n                <td style={{ textAlign: \"center\", border: \"solid 1px black\" }}>\r\n                  Ongoing{\" \"}\r\n                  <span style={{ fontSize: \"0.7em\" }}>\r\n                    (<i>Round {this.state.ongoingRound}</i>)\r\n                  </span>\r\n                </td>\r\n                <InputCell>\r\n                  <ScoreInput\r\n                    id=\"p1\"\r\n                    gameState={this.state.gameState}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </InputCell>\r\n                <InputCell>\r\n                  <ScoreInput\r\n                    id=\"p2\"\r\n                    gameState={this.state.gameState}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </InputCell>\r\n                <InputCell>\r\n                  <ScoreInput\r\n                    id=\"p3\"\r\n                    gameState={this.state.gameState}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </InputCell>\r\n                <InputCell>\r\n                  <ScoreInput\r\n                    id=\"p4\"\r\n                    gameState={this.state.gameState}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </InputCell>\r\n              </tr>\r\n              {rows}\r\n              <TableBottom processedScores={this.processedScores} />\r\n            </tbody>\r\n          </table>\r\n          <ErrorDiv error={this.state.error}>\r\n            <h3>The input is not valid.</h3>\r\n            <ul>{allErrorMessages}</ul>\r\n          </ErrorDiv>\r\n        </div>\r\n        <footer style={{ height: \"60px\", textAlign: \"center\" }}>\r\n          Made by <a href=\"https://www.darshanbaral.com\">Darshan</a>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}