{"version":3,"sources":["components/button.js","components/scoreInput.js","components/playerName.js","components/tableHead.js","components/tableBottom.js","components/scoreRow.js","components/head.js","components/overlay.js","components/footer.js","components/icons/spade.js","index.js"],"names":["SButton","React","Component","[object Object]","args","super","this","handleClick","props","onClick","render","cursor","allowClick","react_default","a","createElement","Button","style","width","variant","type","label","ScoreInput","state","value","placeholder","isValid","handleChange","event","_ref","gameState","_ref2","Object","slicedToArray","min","max","val","Number","target","isNaN","isInteger","setState","onChange","id","handleBlur","handleFocus","Form","Control","textAlign","border","fontWeight","height","fontFamily","fontSize","onFocus","onBlur","isInvalid","Input","styled","input","_templateObject","editing","PlayerName","name","select","data-tip","data-for","title","headerStyle","display","alignItems","justifyContent","TableHead","headercells","i","push","playerName_PlayerName","playerNames","react","Div","div","tableBottom_templateObject","TableBottom","ongoingScoreSum","processedScores","reduce","r","map","b","Math","round","length","totals","tableBottom_Div","key","className","CallSpan","span","scoreRow_templateObject","ScoreSpan","_templateObject2","negative","ScoreRow","gameNumber","callValue","bg","fc","fs","el","calls","_templateObject3","rows","Head","index_module","charSet","rel","sizes","href","Overlay","showOverlay","position","bottom","left","backgroundColor","flexDirection","button_SButton","yesFunction","noFunction","Footer","Spade","version","xmlns","viewBox","preserveAspectRatio","transform","fill","stroke","d","InputCell","src_templateObject","MessageDiv","src_templateObject2","show","App","ongoingRound","roundComplete","p1","p2","p3","p4","errorInInput","errorMessages","warningMessages","rounds","playerCalls","playerScores","gameCount","order","newRound","ar","minimum","maximum","total","inputType","allErrorMessages","check","some","forEach","processScores","hands","handleScoreInput","callsForThisGame","findIndex","includes","console","log","procScores","ind","onPlayerNameChange","names","nm","undefined","handleCallInput","_this$state","userInput","playerNum","toggleDisplay","scoreRow_ScoreRow","uuid","v4","inputs","scoreInput_ScoreInput","head_Head","overlay_Overlay","minHeight","tableHead_TableHead","lineHeight","tableBottom_TableBottom","footer_Footer","rootElement","document","getElementById","ReactDOM","src_App"],"mappings":"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","file":"static/js/main.14dce548.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default class SButton extends React.Component {\r\n  handleClick = () => {\r\n    this.props.onClick();\r\n  };\r\n  render() {\r\n    let cursor = this.props.allowClick ? \"pointer\" : \"initial\";\r\n    return (\r\n      <Button\r\n        style={{\r\n          cursor: cursor,\r\n          width: \"100px\"\r\n        }}\r\n        variant={this.props.allowClick ? this.props.type : \"secondary\"}\r\n        onClick={this.handleClick}\r\n      >\r\n        {this.props.label}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nexport default class ScoreInput extends React.Component {\r\n  state = { value: \"\", placeholder: \"0\", isValid: true };\r\n  handleChange = event => {\r\n    const [min, max] = this.props.gameState === \"call\" ? [1, 8] : [0, 13];\r\n    const val = Number(event.target.value);\r\n    if (val < min || val > max || isNaN(val) || !Number.isInteger(val)) {\r\n      this.setState({ isValid: false });\r\n    } else {\r\n      this.setState({ isValid: true });\r\n    }\r\n    this.setState({ value: event.target.value });\r\n    this.props.onChange(this.props.id, event.target.value);\r\n  };\r\n  handleBlur = () => {\r\n    this.setState({ placeholder: \"0\" });\r\n  };\r\n  handleFocus = () => {\r\n    this.setState({ placeholder: \"\", value: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <Form.Control\r\n        style={{\r\n          textAlign: \"center\",\r\n          border: \"1px solid #007bff\",\r\n          fontWeight: \"400\",\r\n          height: \"100%\",\r\n          fontFamily: \"'Roboto Mono', monospace\",\r\n          fontSize: \"1.1em\"\r\n        }}\r\n        id={this.props.id}\r\n        type=\"tel\"\r\n        placeholder={this.state.placeholder}\r\n        value={this.state.value}\r\n        onChange={this.handleChange}\r\n        onFocus={this.handleFocus}\r\n        onBlur={this.handleBlur}\r\n        isInvalid={!this.state.isValid}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  text-align: center;\r\n  outline: none;\r\n  border: none;\r\n  width: calc(100% - 10px);\r\n  padding: 5px;\r\n  height: 30px;\r\n  font-size: 1em;\r\n  font-weight: 700;\r\n  color: ${props => (props.editing ? \"black\" : \"#2962ff\")};\r\n  background-color: ${props => (props.editing ? \"#286cc440\" : \"white\")};\r\n  &:hover {\r\n    cursor: ${props => (props.editing ? \"initial\" : \"pointer\")};\r\n  }\r\n`;\r\n\r\nexport default class PlayerName extends React.Component {\r\n  state = {\r\n    value: this.props.name,\r\n    editing: false\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ value: event.target.value }, () => {\r\n      this.props.onChange(this.props.id, this.state.value);\r\n    });\r\n  };\r\n\r\n  handleFocus = event => {\r\n    event.target.select();\r\n    this.setState({ editing: true });\r\n  };\r\n\r\n  handleBlur = event => {\r\n    this.setState({ editing: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Input\r\n        data-tip\r\n        data-for=\"change-name-message\"\r\n        onChange={this.handleChange}\r\n        onFocus={this.handleFocus}\r\n        onBlur={this.handleBlur}\r\n        value={this.state.value}\r\n        placeholder={this.props.id}\r\n        editing={this.state.editing}\r\n        title=\"Click to edit\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport PlayerName from \"./playerName\";\r\n\r\nconst headerStyle = {\r\n  border: \"1px solid\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\"\r\n};\r\n\r\nexport default class TableHead extends React.Component {\r\n  onChange = (id, name) => {\r\n    this.props.onChange(id, name);\r\n  };\r\n  render() {\r\n    let headercells = [];\r\n    for (let i = 0; i < 4; i++) {\r\n      headercells.push(\r\n        <div style={headerStyle}>\r\n          <PlayerName\r\n            id={[\"p1-name\", \"p2-name\", \"p3-name\", \"p4-name\"][i]}\r\n            name={this.props.playerNames[i]}\r\n            onChange={this.onChange}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <div style={headerStyle}>\r\n          <strong>Game</strong>\r\n        </div>\r\n        {headercells}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Div = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 5px;\r\n  height: 30px;\r\n  border: solid 1px black;\r\n`;\r\n\r\nexport default class TableBottom extends React.Component {\r\n  render() {\r\n    let ongoingScoreSum = this.props.processedScores.reduce(\r\n      (r, a) =>\r\n        a.map((b, i) => Math.round((Number(r[i] || 0) + Number(b)) * 10) / 10),\r\n      []\r\n    );\r\n\r\n    if (ongoingScoreSum.length === 0) {\r\n      ongoingScoreSum = [0, 0, 0, 0];\r\n    }\r\n\r\n    let totals = [];\r\n    for (let i = 0; i < 4; i++) {\r\n      totals.push(\r\n        <Div\r\n          key={this.props.processedScores.length + \" \" + i}\r\n          className=\"grid-element\"\r\n        >\r\n          <strong>{ongoingScoreSum[i]}</strong>\r\n        </Div>\r\n      );\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Div className=\"grid-element\">\r\n          <strong title=\"This row shows the running total\">Total</strong>\r\n        </Div>\r\n        {totals}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CallSpan = styled.span`\r\n  margin-right: 0.6em;\r\n  font-size: 0.9em;\r\n  text-decoration: line-through;\r\n  font-style: italic;\r\n  color: #e6ee9c;\r\n`;\r\n\r\nconst ScoreSpan = styled.span`\r\n  font-size: 1em;\r\n  font-weight: 400;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n  color: ${props => (props.negative ? \"#ff7070\" : \"inherit\")};\r\n  border-radius: ${props => (props.negative ? \"2px\" : \"inherit\")};\r\n`;\r\n\r\nexport default class ScoreRow extends React.Component {\r\n  render() {\r\n    let gameNumber = this.props.gameNumber;\r\n    let val = [];\r\n    let callValue = [];\r\n    let bg = \"#1976d2\";\r\n    let fc = \"white\";\r\n    let fs = \"none\";\r\n    let negative = [];\r\n    if (this.props.processedScores[gameNumber]) {\r\n      val = this.props.processedScores[gameNumber];\r\n      negative = this.props.processedScores[gameNumber].map(el => el < 0);\r\n      callValue = this.props.calls[gameNumber];\r\n    } else {\r\n      val = this.props.calls[gameNumber];\r\n      callValue = [\"\", \"\", \"\", \"\"];\r\n      bg = \"#bbdefb\";\r\n      fc = \"black\";\r\n      fs = \"italic\";\r\n    }\r\n\r\n    const Div = styled.div`\r\n      background-color: ${bg};\r\n      color: ${fc};\r\n      font-style: ${fs};\r\n      text-align: center;\r\n      height: 30px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    `;\r\n\r\n    let rows = [];\r\n    for (let i = 0; i < val.length; i++) {\r\n      rows.push(\r\n        <Div key={fc + gameNumber + \"p\" + i}>\r\n          <CallSpan>{callValue[i]}</CallSpan>\r\n          <ScoreSpan negative={negative[i]}>{val[i]}</ScoreSpan>\r\n        </Div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Div>{[\"i\", \"ii\", \"iii\", \"iv\", \"Final\"][this.props.gameNumber]}</Div>\r\n        {rows}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\r\n\r\nexport default class Head extends React.Component {\r\n  render() {\r\n    return (\r\n      <HelmetProvider>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Callbreak</title>\r\n          <link\r\n            rel=\"apple-touch-icon\"\r\n            sizes=\"180x180\"\r\n            href=\"./images/apple-touch-icon.png\"\r\n          />\r\n          <link\r\n            rel=\"icon\"\r\n            type=\"image/png\"\r\n            sizes=\"32x32\"\r\n            href=\"./images/favicon-32x32.png\"\r\n          />\r\n          <link\r\n            rel=\"icon\"\r\n            type=\"image/png\"\r\n            sizes=\"16x16\"\r\n            href=\"./images/favicon-16x16.png\"\r\n          />\r\n          <link rel=\"manifest\" href=\"./images/site.webmanifest\" />\r\n        </Helmet>\r\n      </HelmetProvider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport SButton from \"./button\";\r\n\r\nexport default class Overlay extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.props.showOverlay ? \"d-flex\" : \"d-none\"}\r\n        style={{\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          position: \"fixed\",\r\n          bottom: \"0\",\r\n          left: \"0\",\r\n          backgroundColor: \"#000000b5\"\r\n        }}\r\n      >\r\n        <div\r\n          className=\"border border-danger bg-light rounded p-3\"\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"200px\",\r\n            width: \"270px\"\r\n          }}\r\n        >\r\n          <h5 className=\"text-center mb-4\">Do you want to start a new game?</h5>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\"\r\n            }}\r\n          >\r\n            <SButton\r\n              label=\"Yes, I'm sure\"\r\n              allowClick={true}\r\n              onClick={this.props.yesFunction}\r\n              type=\"warning\"\r\n            />\r\n            <SButton\r\n              label=\"No, go back\"\r\n              allowClick={true}\r\n              onClick={this.props.noFunction}\r\n              type=\"success\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer\r\n        style={{ height: this.props.height, textAlign: \"center\" }}\r\n        className=\"border-top border-primary pt-2\"\r\n      >\r\n        &copy; 2019 <a href=\"https://www.darshanbaral.com\">Darshan</a> &middot;\r\n        Fork{\" \"}\r\n        <a\r\n          href=\"https://github.com/darshanbaral/callbreak\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          here\r\n        </a>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\r\n\r\nexport default function Spade() {\r\n  return (\r\n    <span\r\n      style={{\r\n        width: \"40px\",\r\n        height: \"40px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n      }}\r\n    >\r\n      <svg\r\n        version=\"1.0\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"35px\"\r\n        height=\"35px\"\r\n        viewBox=\"0 0 1280.000000 1258.000000\"\r\n        preserveAspectRatio=\"xMidYMid meet\"\r\n      >\r\n        <metadata>\r\n          Created by potrace 1.15, written by Peter Selinger 2001-2017\r\n        </metadata>\r\n        <g\r\n          transform=\"translate(0.000000,1258.000000) scale(0.100000,-0.100000)\"\r\n          fill=\"#000000\"\r\n          stroke=\"none\"\r\n        >\r\n          <path\r\n            d=\"M6295 12570 c-132 -29 -174 -56 -454 -290 -1331 -1112 -2746 -2473\r\n-3717 -3575 -570 -647 -1039 -1259 -1346 -1756 -299 -484 -587 -1087 -667\r\n-1399 -17 -63 -47 -203 -68 -310 l-38 -195 1 -255 c2 -260 3 -272 54 -533 36\r\n-186 121 -422 228 -632 148 -292 365 -567 617 -781 557 -475 1319 -780 2225\r\n-889 276 -34 746 -31 1050 6 100 12 360 58 372 65 4 3 8 2 8 -3 -1 -13 -273\r\n-226 -660 -518 -485 -366 -584 -453 -702 -619 -129 -181 -156 -332 -94 -515\r\n34 -98 63 -144 133 -214 67 -67 186 -131 273 -147 37 -7 1045 -9 2920 -8\r\nl2865 3 59 23 c115 43 216 119 276 207 67 99 105 254 90 373 -28 221 -223 451\r\n-660 774 -63 46 -187 138 -275 203 -215 159 -552 432 -543 441 2 1 41 -6 88\r\n-16 401 -87 953 -104 1425 -44 407 52 883 179 1245 334 914 390 1507 1038\r\n1721 1883 50 197 58 252 71 477 10 189 10 233 -6 370 -46 419 -182 843 -421\r\n1315 -359 707 -956 1533 -1754 2430 -971 1090 -2331 2396 -3633 3486 -273 229\r\n-308 254 -397 287 -73 26 -217 38 -286 22z\"\r\n          />\r\n        </g>\r\n      </svg>\r\n    </span>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport SButton from \"./components/button\";\r\nimport ScoreInput from \"./components/scoreInput\";\r\nimport TableHead from \"./components/tableHead\";\r\nimport TableBottom from \"./components/tableBottom\";\r\nimport ScoreRow from \"./components/scoreRow\";\r\nimport uuid from \"uuid\";\r\nimport Head from \"./components/head\";\r\nimport Overlay from \"./components/overlay\";\r\nimport Footer from \"./components/footer\";\r\nimport Spade from \"./components/icons/spade\";\r\n\r\nimport \"./bootstrap-4.3.1-dist/css/bootstrap.min.css\";\r\nimport \"./styles.css\";\r\n\r\nconst InputCell = styled.div`\r\n  min-width: 50px;\r\n`;\r\n\r\nconst MessageDiv = styled.div`\r\n  border-radius: 5px;\r\n  display: ${props => (props.show ? \"block\" : \"none\")};\r\n`;\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    round: 0,\r\n    ongoingRound: 1,\r\n    roundComplete: false,\r\n    gameNumber: 0,\r\n    gameState: \"call\",\r\n    label: \"Record Calls\",\r\n    playerNames: [\"p1\", \"p2\", \"p3\", \"p4\"],\r\n    p1: 0,\r\n    p2: 0,\r\n    p3: 0,\r\n    p4: 0,\r\n    allowClick: true,\r\n    errorInInput: false,\r\n    errorMessages: [],\r\n    warningMessages: \"\",\r\n    showOverlay: false\r\n  };\r\n  rounds = { p1: [], p2: [], p3: [], p4: [] };\r\n  playerCalls = [];\r\n  playerScores = [];\r\n  processedScores = [];\r\n  gameCount = 5;\r\n  order = [\"p1\", \"p2\", \"p3\", \"p4\"];\r\n\r\n  newRound = () => {\r\n    this.setState({\r\n      ongoingRound: this.state.roundComplete\r\n        ? this.state.ongoingRound + 1\r\n        : this.state.ongoingRound,\r\n      round: this.state.round + 1,\r\n      roundComplete: false,\r\n      gameNumber: 0,\r\n      gameState: \"call\",\r\n      label: \"Record Calls\",\r\n      p1: 0,\r\n      p2: 0,\r\n      p3: 0,\r\n      p4: 0,\r\n      allowClick: true,\r\n      errorMessages: [],\r\n      errorInInput: false,\r\n      showOverlay: false\r\n    });\r\n    this.playerCalls = [];\r\n    this.playerScores = [];\r\n    this.processedScores = [];\r\n  };\r\n\r\n  isValid = ar => {\r\n    let [minimum, maximum, total] =\r\n      this.state.gameState === \"call\" ? [1, 8, 32] : [0, 13, 13];\r\n    let inputType = this.state.gameState === \"call\" ? \"calls\" : \"hands\";\r\n    let allErrorMessages = [\r\n      \"each input for \" + inputType + \" must be an integer.\",\r\n      \"each input for \" +\r\n        inputType +\r\n        \" must be greater than than \" +\r\n        minimum +\r\n        \".\",\r\n      \"each input for \" + inputType + \" must be smaller than \" + maximum + \".\",\r\n      this.state.gameState === \"call\"\r\n        ? \"total of calls must be smaller than \" + total + \".\"\r\n        : \"total of hands must be equal to 13.\"\r\n    ];\r\n    let check = [];\r\n    let errorMessages = [];\r\n    check.push(ar.some(el => !Number.isInteger(el)));\r\n    check.push(ar.some(el => el < minimum));\r\n    check.push(ar.some(el => el > maximum));\r\n\r\n    if (this.state.gameState === \"call\") {\r\n      check.push(ar.reduce((a, b) => a + b, 0) > total);\r\n    } else {\r\n      check.push(ar.reduce((a, b) => a + b, 0) !== total);\r\n    }\r\n\r\n    check.forEach((el, i) => {\r\n      if (el) {\r\n        errorMessages.push(allErrorMessages[i]);\r\n      }\r\n    });\r\n    this.setState({ errorMessages: errorMessages });\r\n    return !check.some(el => el);\r\n  };\r\n\r\n  processScores = (hands, calls) => {\r\n    hands = hands.map(el => Number(el));\r\n    calls = calls.map(el => Number(el));\r\n    let processedScores = [];\r\n    for (let i = 0; i < hands.length; i++) {\r\n      if (hands[i] >= calls[i]) {\r\n        processedScores[i] = calls[i] + \".\" + (hands[i] - calls[i]);\r\n      } else {\r\n        processedScores[i] = -1 * calls[i];\r\n      }\r\n    }\r\n    return processedScores;\r\n  };\r\n\r\n  handleScoreInput = ar => {\r\n    if (this.isValid(ar)) {\r\n      if (ar.some(el => el >= 8)) {\r\n        let callsForThisGame = this.playerCalls[this.playerCalls.length - 1];\r\n        callsForThisGame = callsForThisGame.map(el => Number(el));\r\n        let callsGeEight = [callsForThisGame.findIndex(el => el >= 8)];\r\n        if (callsGeEight.includes(ar.findIndex(el => el >= 8))) {\r\n          console.log(\"here\");\r\n        }\r\n      }\r\n      this.setState({\r\n        gameNumber: this.state.gameNumber + 1,\r\n        errorInInput: false\r\n      });\r\n      let procScores = this.processScores(\r\n        ar,\r\n        this.playerCalls[this.playerCalls.length - 1]\r\n      );\r\n      this.playerScores.push(ar);\r\n      this.processedScores.push(procScores);\r\n      if (this.state.gameNumber < this.gameCount - 1) {\r\n        this.setState({ label: \"Record Calls\" });\r\n      } else {\r\n        this.setState({\r\n          label: \"Round Over!!!\",\r\n          roundComplete: true,\r\n          allowClick: false\r\n        });\r\n\r\n        let totals = this.processedScores.reduce(\r\n          (r, a) =>\r\n            a.map(\r\n              (b, i) => Math.round((Number(r[i] || 0) + Number(b)) * 10) / 10\r\n            ),\r\n          []\r\n        );\r\n        totals.map((val, ind) => this.rounds[this.order[ind]].push(val));\r\n      }\r\n      this.setState({ gameState: \"call\" });\r\n    } else {\r\n      this.setState({ errorInInput: true });\r\n    }\r\n  };\r\n\r\n  onPlayerNameChange = (id, name) => {\r\n    let names = this.state.playerNames;\r\n    let ind = [\"p1-name\", \"p2-name\", \"p3-name\", \"p4-name\"].findIndex(\r\n      el => el === id\r\n    );\r\n    names[ind] = name;\r\n    this.setState({ playerNames: names });\r\n    if (names.some(nm => (nm === \"\") | (nm === undefined))) {\r\n      this.setState({ warningMessages: \"Player name(s) empty\" });\r\n    } else {\r\n      this.setState({ warningMessages: \"\" });\r\n    }\r\n  };\r\n\r\n  handleCallInput = ar => {\r\n    if (this.isValid(ar)) {\r\n      this.setState({\r\n        gameState: \"play\",\r\n        label: \"Record Hands\",\r\n        errorInInput: false\r\n      });\r\n      this.playerCalls.push(ar);\r\n    } else {\r\n      this.setState({ errorInInput: true });\r\n    }\r\n  };\r\n\r\n  handleClick = () => {\r\n    if (this.state.label === \"Round Over!!!\") {\r\n      return;\r\n    }\r\n    const { p1, p2, p3, p4 } = this.state;\r\n    const userInput = [p1, p2, p3, p4].map(el => Number(el));\r\n    this.state.gameState === \"call\"\r\n      ? this.handleCallInput(userInput)\r\n      : this.handleScoreInput(userInput);\r\n  };\r\n\r\n  handleChange = (playerNum, value) => {\r\n    this.setState({ [playerNum]: value });\r\n  };\r\n\r\n  toggleDisplay = () => {\r\n    if (\r\n      (this.state.gameNumber === 0 && this.state.gameState === \"call\") ||\r\n      !this.state.allowClick\r\n    ) {\r\n      this.newRound();\r\n    } else {\r\n      this.setState({ showOverlay: !this.state.showOverlay });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let rows = [];\r\n    for (let i = 0; i < this.playerCalls.length; i++) {\r\n      rows.push(\r\n        <ScoreRow\r\n          key={uuid.v4()}\r\n          gameNumber={i}\r\n          calls={this.playerCalls}\r\n          processedScores={this.processedScores}\r\n        />\r\n      );\r\n    }\r\n\r\n    let inputs = [];\r\n    this.order.forEach(el => {\r\n      inputs.push(\r\n        <InputCell>\r\n          <ScoreInput\r\n            id={el}\r\n            gameState={this.state.gameState}\r\n            onChange={this.handleChange}\r\n          />\r\n        </InputCell>\r\n      );\r\n    });\r\n\r\n    let history = \"\";\r\n    /*for (let i = 0; i < this.rounds.p1.length; i++) {\r\n      let temp = [];\r\n      for (let nm in this.rounds) {\r\n        temp.push(Number(this.rounds[nm][i]));\r\n      }\r\n      let uniqueScores = [...new Set(temp)].sort();\r\n    }*/\r\n\r\n    let allErrorMessages = [];\r\n    for (let i = 0; i < this.state.errorMessages.length; i++) {\r\n      allErrorMessages.push(\r\n        <li key={uuid.v4()}>{this.state.errorMessages[i]}</li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"App container mt-2\">\r\n        <Head />\r\n        <Overlay\r\n          showOverlay={this.state.showOverlay}\r\n          yesFunction={this.newRound}\r\n          noFunction={this.toggleDisplay}\r\n        />\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <h1 className=\"mb-2 mr-2\">Call Break</h1>\r\n          <Spade />\r\n        </div>\r\n        <div style={{ minHeight: \"calc(100vh - 120px)\" }}>\r\n          <div\r\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n            className=\"border-bottom border-primary pb-3 mb-3\"\r\n          >\r\n            <SButton\r\n              label={this.state.label}\r\n              allowClick={this.state.allowClick}\r\n              onClick={this.handleClick}\r\n              type=\"primary\"\r\n            />\r\n            <SButton\r\n              label=\"New Round\"\r\n              allowClick={true}\r\n              onClick={this.toggleDisplay}\r\n              type=\"warning\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"grid-container\">\r\n            <TableHead\r\n              playerNames={this.state.playerNames}\r\n              onChange={this.onPlayerNameChange}\r\n            />\r\n            <Fragment key={\"Round\" + this.state.round}>\r\n              <div\r\n                className=\"bg-success text-white p-1\"\r\n                title=\"Enter calls and hands in this row\"\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  lineHeight: \"15px\",\r\n                  fontSize: \"0.9em\"\r\n                }}\r\n              >\r\n                Ongoing{\" \"}\r\n                <span style={{ fontSize: \"0.7em\" }}>\r\n                  (<i>Round {this.state.ongoingRound}</i>)\r\n                </span>\r\n              </div>\r\n              {inputs}\r\n            </Fragment>\r\n            {rows}\r\n            <TableBottom processedScores={this.processedScores} />\r\n          </div>\r\n          {history}\r\n          <MessageDiv\r\n            style={{ backgroundColor: \"#ff000033\" }}\r\n            show={this.state.errorInInput}\r\n            className=\"border border-danger mt-4 p-2\"\r\n          >\r\n            <h4>Error. The input is not valid.</h4>\r\n            <ul>{allErrorMessages}</ul>\r\n          </MessageDiv>\r\n          <MessageDiv\r\n            style={{ backgroundColor: \"#fff20033\" }}\r\n            show={this.state.warningMessages}\r\n            className=\"border border-warning mt-4 p-2\"\r\n          >\r\n            <h4>Warning</h4>\r\n            <ul>\r\n              <li>{this.state.warningMessages}</li>\r\n            </ul>\r\n          </MessageDiv>\r\n        </div>\r\n        <Footer height=\"60px\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}