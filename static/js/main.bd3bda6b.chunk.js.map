{"version":3,"sources":["components/button.js","components/scoreInput.js","components/playerName.js","components/tableHead.js","components/tableBottom.js","components/scoreRow.js","components/head.js","components/overlay.js","components/footer.js","index.js"],"names":["SButton","handleClick","_this","props","onClick","cursor","this","allowClick","react_default","a","createElement","Button","style","width","variant","type","label","React","Component","ScoreInput","state","value","placeholder","isValid","handleChange","event","_ref","gameState","_ref2","Object","slicedToArray","min","max","val","Number","target","isNaN","isInteger","setState","onChange","id","handleBlur","handleFocus","Form","Control","textAlign","border","fontWeight","onFocus","onBlur","isInvalid","Input","styled","input","_templateObject","editing","PlayerName","name","select","data-tip","data-for","title","HeaderCell","div","tableHead_templateObject","TableHead","react","playerName_PlayerName","playerNames","Div","tableBottom_templateObject","TableBottom","ongoingScoreSum","processedScores","reduce","r","map","b","i","Math","round","length","totals","push","tableBottom_Div","key","className","CallSpan","span","scoreRow_templateObject","ScoreSpan","_templateObject2","negative","ScoreRow","gameNumber","callValue","bg","fc","fs","el","calls","_templateObject3","rows","Head","index_module","charSet","rel","sizes","href","Overlay","showOverlay","justifyContent","alignItems","height","position","bottom","left","backgroundColor","display","flexDirection","button_SButton","yesFunction","noFunction","Footer","InputCell","src_templateObject","MessageDiv","src_templateObject2","show","App","ongoingRound","roundComplete","p1","p2","p3","p4","errorInInput","errorMessages","warningMessages","rounds","playerCalls","playerScores","gameCount","order","newRound","ar","minimum","maximum","total","inputType","allErrorMessages","check","some","forEach","processScores","hands","handleScoreInput","callsForThisGame","findIndex","includes","console","log","procScores","ind","onPlayerNameChange","undefined","names","handleCallInput","_this$state","userInput","playerNum","defineProperty","toggleDisplay","_this2","scoreRow_ScoreRow","uuid","v4","inputs","scoreInput_ScoreInput","head_Head","overlay_Overlay","minHeight","tableHead_TableHead","lineHeight","fontSize","tableBottom_TableBottom","footer_Footer","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.bd3bda6b.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default class SButton extends React.Component {\n  handleClick = () => {\n    this.props.onClick();\n  };\n  render() {\n    let cursor = this.props.allowClick ? \"pointer\" : \"initial\";\n    return (\n      <Button\n        style={{\n          cursor: cursor,\n          width: \"100px\"\n        }}\n        variant={this.props.allowClick ? this.props.type : \"secondary\"}\n        onClick={this.handleClick}\n      >\n        {this.props.label}\n      </Button>\n    );\n  }\n}\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\nexport default class ScoreInput extends React.Component {\n  state = { value: \"\", placeholder: \"0\", isValid: true };\n  handleChange = event => {\n    const [min, max] = this.props.gameState === \"call\" ? [1, 8] : [0, 13];\n    const val = Number(event.target.value);\n    if (val < min || val > max || isNaN(val) || !Number.isInteger(val)) {\n      this.setState({ isValid: false });\n    } else {\n      this.setState({ isValid: true });\n    }\n    this.setState({ value: event.target.value });\n    this.props.onChange(this.props.id, event.target.value);\n  };\n  handleBlur = () => {\n    this.setState({ placeholder: \"0\" });\n  };\n  handleFocus = () => {\n    this.setState({ placeholder: \"\", value: \"\" });\n  };\n  render() {\n    return (\n      <Form.Control\n        style={{\n          textAlign: \"center\",\n          border: \"1px solid #007bff\",\n          fontWeight: \"700\"\n        }}\n        id={this.props.id}\n        type=\"tel\"\n        placeholder={this.state.placeholder}\n        value={this.state.value}\n        onChange={this.handleChange}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        isInvalid={!this.state.isValid}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = styled.input`\n  text-align: center;\n  outline: none;\n  border: none;\n  width: calc(100% - 10px);\n  padding: 5px;\n  height: 30px;\n  font-size: 1em;\n  font-weight: 700;\n  color: ${props => (props.editing ? \"black\" : \"#2962ff\")};\n  background-color: ${props => (props.editing ? \"#286cc440\" : \"white\")};\n  &:hover {\n    cursor: ${props => (props.editing ? \"initial\" : \"pointer\")};\n  }\n`;\n\nexport default class PlayerName extends React.Component {\n  state = {\n    value: this.props.name,\n    editing: false\n  };\n\n  handleChange = event => {\n    this.setState({ value: event.target.value }, () => {\n      this.props.onChange(this.props.id, this.state.value);\n    });\n  };\n\n  handleFocus = event => {\n    event.target.select();\n    this.setState({ editing: true });\n  };\n\n  handleBlur = event => {\n    this.setState({ editing: false });\n  };\n\n  render() {\n    return (\n      <Input\n        data-tip\n        data-for=\"change-name-message\"\n        onChange={this.handleChange}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        value={this.state.value}\n        placeholder={this.props.id}\n        editing={this.state.editing}\n        title=\"Click to edit\"\n      />\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\n\nimport PlayerName from \"./playerName\";\nimport styled from \"styled-components\";\n\nconst HeaderCell = styled.div`\n  border: 1px solid;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default class TableHead extends React.Component {\n  onChange = (id, name) => {\n    this.props.onChange(id, name);\n  };\n  render() {\n    return (\n      <Fragment>\n        <HeaderCell width=\"100\">\n          <strong>Game</strong>\n        </HeaderCell>\n        <HeaderCell>\n          <PlayerName\n            id=\"p1-name\"\n            name={this.props.playerNames[0]}\n            onChange={this.onChange}\n          />\n        </HeaderCell>\n        <HeaderCell>\n          <PlayerName\n            id=\"p2-name\"\n            name={this.props.playerNames[1]}\n            onChange={this.onChange}\n          />\n        </HeaderCell>\n        <HeaderCell>\n          <PlayerName\n            id=\"p3-name\"\n            name={this.props.playerNames[2]}\n            onChange={this.onChange}\n          />\n        </HeaderCell>\n        <HeaderCell>\n          <PlayerName\n            id=\"p4-name\"\n            name={this.props.playerNames[3]}\n            onChange={this.onChange}\n          />\n        </HeaderCell>\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\n\nimport styled from \"styled-components\";\n\nconst Div = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  height: 30px;\n  border: solid 1px black;\n`;\n\nexport default class TableBottom extends React.Component {\n  render() {\n    let ongoingScoreSum = this.props.processedScores.reduce(\n      (r, a) =>\n        a.map((b, i) => Math.round((Number(r[i] || 0) + Number(b)) * 10) / 10),\n      []\n    );\n\n    if (ongoingScoreSum.length === 0) {\n      ongoingScoreSum = [0, 0, 0, 0];\n    }\n\n    let totals = [];\n    for (let i = 0; i < 4; i++) {\n      totals.push(\n        <Div\n          key={this.props.processedScores.length + \" \" + i}\n          className=\"grid-element\"\n        >\n          <strong>{ongoingScoreSum[i]}</strong>\n        </Div>\n      );\n    }\n    return (\n      <Fragment>\n        <Div className=\"grid-element\">\n          <strong title=\"This row shows the running total\">Total</strong>\n        </Div>\n        {totals}\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\n\nconst CallSpan = styled.span`\n  margin-right: 0.6em;\n  font-size: 0.9em;\n  text-decoration: line-through;\n  font-style: italic;\n  color: #e6ee9c;\n`;\n\nconst ScoreSpan = styled.span`\n  font-size: 1em;\n  font-weight: 400;\n  padding-left: 2px;\n  padding-right: 2px;\n  color: ${props => (props.negative ? \"#ff7070\" : \"inherit\")};\n  border-radius: ${props => (props.negative ? \"2px\" : \"inherit\")};\n`;\n\nexport default class ScoreRow extends React.Component {\n  render() {\n    let gameNumber = this.props.gameNumber;\n    let val = [];\n    let callValue = [];\n    let bg = \"#1976d2\";\n    let fc = \"white\";\n    let fs = \"none\";\n    let negative = [];\n    if (this.props.processedScores[gameNumber]) {\n      val = this.props.processedScores[gameNumber];\n      negative = this.props.processedScores[gameNumber].map(el => el < 0);\n      callValue = this.props.calls[gameNumber];\n    } else {\n      val = this.props.calls[gameNumber];\n      callValue = [\"\", \"\", \"\", \"\"];\n      bg = \"#bbdefb\";\n      fc = \"black\";\n      fs = \"italic\";\n    }\n\n    const Div = styled.div`\n      background-color: ${bg};\n      color: ${fc};\n      font-style: ${fs};\n      text-align: center;\n    `;\n\n    let rows = [];\n    for (let i = 0; i < val.length; i++) {\n      rows.push(\n        <Div key={fc + gameNumber + \"p\" + i}>\n          <CallSpan>{callValue[i]}</CallSpan>\n          <ScoreSpan negative={negative[i]}>{val[i]}</ScoreSpan>\n        </Div>\n      );\n    }\n\n    return (\n      <Fragment>\n        <Div>{[\"i\", \"ii\", \"iii\", \"iv\", \"Final\"][this.props.gameNumber]}</Div>\n        {rows}\n      </Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\n\nexport default class Head extends React.Component {\n  render() {\n    return (\n      <HelmetProvider>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Callbreak</title>\n          <link\n            rel=\"apple-touch-icon\"\n            sizes=\"180x180\"\n            href=\"./images/apple-touch-icon.png\"\n          />\n          <link\n            rel=\"icon\"\n            type=\"image/png\"\n            sizes=\"32x32\"\n            href=\"./images/favicon-32x32.png\"\n          />\n          <link\n            rel=\"icon\"\n            type=\"image/png\"\n            sizes=\"16x16\"\n            href=\"./images/favicon-16x16.png\"\n          />\n          <link rel=\"manifest\" href=\"./images/site.webmanifest\" />\n        </Helmet>\n      </HelmetProvider>\n    );\n  }\n}\n","import React from \"react\";\r\nimport SButton from \"./button\";\r\n\r\nexport default class Overlay extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.props.showOverlay ? \"d-flex\" : \"d-none\"}\r\n        style={{\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          position: \"fixed\",\r\n          bottom: \"0\",\r\n          left: \"0\",\r\n          backgroundColor: \"#000000b5\"\r\n        }}\r\n      >\r\n        <div\r\n          className=\"border border-danger bg-light rounded p-3\"\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"200px\",\r\n            width: \"270px\"\r\n          }}\r\n        >\r\n          <h5 className=\"text-center mb-4\">Do you want to start a new game?</h5>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\"\r\n            }}\r\n          >\r\n            <SButton\r\n              label=\"Yes, I'm sure\"\r\n              allowClick={true}\r\n              onClick={this.props.yesFunction}\r\n              type=\"warning\"\r\n            />\r\n            <SButton\r\n              label=\"No, go back\"\r\n              allowClick={true}\r\n              onClick={this.props.noFunction}\r\n              type=\"success\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer style={{ height: this.props.height, textAlign: \"center\" }}>\r\n        &copy; 2019 <a href=\"https://www.darshanbaral.com\">Darshan</a> &middot;\r\n        Fork{\" \"}\r\n        <a\r\n          href=\"https://github.com/darshanbaral/callbreak\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          here\r\n        </a>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport SButton from \"./components/button\";\nimport ScoreInput from \"./components/scoreInput\";\nimport TableHead from \"./components/tableHead\";\nimport TableBottom from \"./components/tableBottom\";\nimport ScoreRow from \"./components/scoreRow\";\nimport uuid from \"uuid\";\nimport Head from \"./components/head\";\nimport Overlay from \"./components/overlay\";\nimport Footer from \"./components/footer\";\n\nimport \"./bootstrap-4.3.1-dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\n\nconst InputCell = styled.div`\n  min-width: 50px;\n`;\n\nconst MessageDiv = styled.div`\n  border-radius: 5px;\n  display: ${props => (props.show ? \"block\" : \"none\")};\n`;\n\nexport default class App extends React.Component {\n  state = {\n    round: 0,\n    ongoingRound: 1,\n    roundComplete: false,\n    gameNumber: 0,\n    gameState: \"call\",\n    label: \"Record Calls\",\n    playerNames: [\"p1\", \"p2\", \"p3\", \"p4\"],\n    p1: 0,\n    p2: 0,\n    p3: 0,\n    p4: 0,\n    allowClick: true,\n    errorInInput: false,\n    errorMessages: [],\n    warningMessages: \"\",\n    showOverlay: false\n  };\n  rounds = { p1: [], p2: [], p3: [], p4: [] };\n  playerCalls = [];\n  playerScores = [];\n  processedScores = [];\n  gameCount = 5;\n  order = [\"p1\", \"p2\", \"p3\", \"p4\"];\n\n  newRound = () => {\n    this.setState({\n      ongoingRound: this.state.roundComplete\n        ? this.state.ongoingRound + 1\n        : this.state.ongoingRound,\n      round: this.state.round + 1,\n      roundComplete: false,\n      gameNumber: 0,\n      gameState: \"call\",\n      label: \"Record Calls\",\n      p1: 0,\n      p2: 0,\n      p3: 0,\n      p4: 0,\n      allowClick: true,\n      errorMessages: [],\n      errorInInput: false,\n      showOverlay: false\n    });\n    this.playerCalls = [];\n    this.playerScores = [];\n    this.processedScores = [];\n  };\n\n  isValid = ar => {\n    let [minimum, maximum, total] =\n      this.state.gameState === \"call\" ? [1, 8, 32] : [0, 13, 13];\n    let inputType = this.state.gameState === \"call\" ? \"calls\" : \"hands\";\n    let allErrorMessages = [\n      \"each input for \" + inputType + \" must be an integer.\",\n      \"each input for \" +\n        inputType +\n        \" must be greater than than \" +\n        minimum +\n        \".\",\n      \"each input for \" + inputType + \" must be smaller than \" + maximum + \".\",\n      this.state.gameState === \"call\"\n        ? \"total of calls must be smaller than \" + total + \".\"\n        : \"total of hands must be equal to 13.\"\n    ];\n    let check = [];\n    let errorMessages = [];\n    check.push(ar.some(el => !Number.isInteger(el)));\n    check.push(ar.some(el => el < minimum));\n    check.push(ar.some(el => el > maximum));\n\n    if (this.state.gameState === \"call\") {\n      check.push(ar.reduce((a, b) => a + b, 0) > total);\n    } else {\n      check.push(ar.reduce((a, b) => a + b, 0) !== total);\n    }\n\n    check.forEach((el, i) => {\n      if (el) {\n        errorMessages.push(allErrorMessages[i]);\n      }\n    });\n    this.setState({ errorMessages: errorMessages });\n    return !check.some(el => el);\n  };\n\n  processScores = (hands, calls) => {\n    hands = hands.map(el => Number(el));\n    calls = calls.map(el => Number(el));\n    let processedScores = [];\n    for (let i = 0; i < hands.length; i++) {\n      if (hands[i] >= calls[i]) {\n        processedScores[i] = calls[i] + \".\" + (hands[i] - calls[i]);\n      } else {\n        processedScores[i] = -1 * calls[i];\n      }\n    }\n    return processedScores;\n  };\n\n  handleScoreInput = ar => {\n    if (this.isValid(ar)) {\n      if (ar.some(el => el >= 8)) {\n        let callsForThisGame = this.playerCalls[this.playerCalls.length - 1];\n        callsForThisGame = callsForThisGame.map(el => Number(el));\n        let callsGeEight = [callsForThisGame.findIndex(el => el >= 8)];\n        if (callsGeEight.includes(ar.findIndex(el => el >= 8))) {\n          console.log(\"here\");\n        }\n      }\n      this.setState({\n        gameNumber: this.state.gameNumber + 1,\n        errorInInput: false\n      });\n      let procScores = this.processScores(\n        ar,\n        this.playerCalls[this.playerCalls.length - 1]\n      );\n      this.playerScores.push(ar);\n      this.processedScores.push(procScores);\n      if (this.state.gameNumber < this.gameCount - 1) {\n        this.setState({ label: \"Record Calls\" });\n      } else {\n        this.setState({\n          label: \"Round Over!!!\",\n          roundComplete: true,\n          allowClick: false\n        });\n\n        let totals = this.processedScores.reduce(\n          (r, a) =>\n            a.map(\n              (b, i) => Math.round((Number(r[i] || 0) + Number(b)) * 10) / 10\n            ),\n          []\n        );\n        totals.map((val, ind) => this.rounds[this.order[ind]].push(val));\n      }\n      this.setState({ gameState: \"call\" });\n    } else {\n      this.setState({ errorInInput: true });\n    }\n  };\n\n  onPlayerNameChange = (id, name) => {\n    let ind = [\"p1-name\", \"p2-name\", \"p3-name\", \"p4-name\"].findIndex(\n      el => el === id\n    );\n    if ((name === \"\") | (name === undefined)) {\n      this.setState({ warningMessages: \"Player name(s) empty\" });\n    } else {\n      let names = this.state.playerNames;\n      names[ind] = name;\n      this.setState({ playerNames: names, warningMessages: \"\" });\n    }\n  };\n\n  handleCallInput = ar => {\n    if (this.isValid(ar)) {\n      this.setState({\n        gameState: \"play\",\n        label: \"Record Hands\",\n        errorInInput: false\n      });\n      this.playerCalls.push(ar);\n    } else {\n      this.setState({ errorInInput: true });\n    }\n  };\n\n  handleClick = () => {\n    if (this.state.label === \"Round Over!!!\") {\n      return;\n    }\n    const { p1, p2, p3, p4 } = this.state;\n    const userInput = [p1, p2, p3, p4].map(el => Number(el));\n    this.state.gameState === \"call\"\n      ? this.handleCallInput(userInput)\n      : this.handleScoreInput(userInput);\n  };\n\n  handleChange = (playerNum, value) => {\n    this.setState({ [playerNum]: value });\n  };\n\n  toggleDisplay = () => {\n    if (\n      (this.state.gameNumber === 0 && this.state.gameState === \"call\") ||\n      !this.state.allowClick\n    ) {\n      this.newRound();\n    } else {\n      this.setState({ showOverlay: !this.state.showOverlay });\n    }\n  };\n\n  render() {\n    let rows = [];\n    for (let i = 0; i < this.playerCalls.length; i++) {\n      rows.push(\n        <ScoreRow\n          key={uuid.v4()}\n          gameNumber={i}\n          calls={this.playerCalls}\n          processedScores={this.processedScores}\n        />\n      );\n    }\n\n    let inputs = [];\n    this.order.forEach(el => {\n      inputs.push(\n        <InputCell>\n          <ScoreInput\n            id={el}\n            gameState={this.state.gameState}\n            onChange={this.handleChange}\n          />\n        </InputCell>\n      );\n    });\n\n    let history = \"\";\n    /*for (let i = 0; i < this.rounds.p1.length; i++) {\n      let temp = [];\n      for (let nm in this.rounds) {\n        temp.push(Number(this.rounds[nm][i]));\n      }\n      let uniqueScores = [...new Set(temp)].sort();\n    }*/\n\n    let allErrorMessages = [];\n    for (let i = 0; i < this.state.errorMessages.length; i++) {\n      allErrorMessages.push(\n        <li key={uuid.v4()}>{this.state.errorMessages[i]}</li>\n      );\n    }\n\n    return (\n      <div className=\"App container mt-2\">\n        <Head />\n        <Overlay\n          showOverlay={this.state.showOverlay}\n          yesFunction={this.newRound}\n          noFunction={this.toggleDisplay}\n        />\n\n        <h1 className=\"mb-2\">\n          Call Break <sup>&#x2660;</sup>\n        </h1>\n        <div style={{ minHeight: \"calc(100vh - 120px)\" }}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <SButton\n              label={this.state.label}\n              allowClick={this.state.allowClick}\n              onClick={this.handleClick}\n              type=\"primary\"\n            />\n            <SButton\n              label=\"New Round\"\n              allowClick={true}\n              onClick={this.toggleDisplay}\n              type=\"warning\"\n            />\n          </div>\n          <hr />\n          <div className=\"grid-container\">\n            <TableHead\n              playerNames={this.state.playerNames}\n              onChange={this.onPlayerNameChange}\n            />\n            <Fragment key={\"Round\" + this.state.round}>\n              <div\n                className=\"bg-success text-white\"\n                title=\"Enter calls and hands in this row\"\n                style={{\n                  textAlign: \"center\",\n                  lineHeight: \"18px\"\n                }}\n              >\n                Ongoing{\" \"}\n                <span style={{ fontSize: \"0.7em\" }}>\n                  (<i>Round {this.state.ongoingRound}</i>)\n                </span>\n              </div>\n              {inputs}\n            </Fragment>\n            {rows}\n            <TableBottom processedScores={this.processedScores} />\n          </div>\n          {history}\n          <MessageDiv\n            style={{ backgroundColor: \"#ff000033\" }}\n            show={this.state.errorInInput}\n            className=\"border border-danger mt-4 p-2\"\n          >\n            <h4>Error. The input is not valid.</h4>\n            <ul>{allErrorMessages}</ul>\n          </MessageDiv>\n          <MessageDiv\n            style={{ backgroundColor: \"#fff20033\" }}\n            show={this.state.warningMessages}\n            className=\"border border-warning mt-4 p-2\"\n          >\n            <h4>Warning</h4>\n            <ul>\n              <li>{this.state.warningMessages}</li>\n            </ul>\n          </MessageDiv>\n        </div>\n        <Footer height=\"60px\" />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}