{"version":3,"sources":["components/button.js","components/scoreInput.js","components/playerName.js","components/tableHead.js","components/tableBottom.js","components/scoreRow.js","index.js"],"names":["StyledButton","styled","button","_templateObject","props","allowClick","Button","handleClick","_this","onClick","react_default","a","createElement","this","label","React","Component","Input","input","scoreInput_templateObject","valid","ScoreInput","state","value","placeholder","handleChange","event","_ref","gameState","_ref2","Object","slicedToArray","min","max","val","Number","target","isNaN","setState","onChange","id","handleBlur","handleFocus","type","onFocus","onBlur","playerName_templateObject","editing","PlayerName","name","select","playerName_Input","data-tip","data-for","title","HeaderCell","td","tableHead_templateObject","TableHead","width","playerName_PlayerName","tableBottom_templateObject","TableBottom","sum","i","processedScores","length","tableBottom_HeaderCell","GameCell","scoreRow_templateObject","CallSpan","span","_templateObject2","ScoreSpan","_templateObject3","negative","ScoreRow","gameNumber","callValue","bg","fc","fs","map","el","calls","style","backgroundColor","color","fontStyle","InputCell","src_templateObject","ErrorDiv","div","src_templateObject2","error","App","round","roundComplete","p1","p2","p3","p4","messages","rounds","playerCalls","playerScores","newRound","isValid","ar","minimum","maximum","total","valName","allMessages","check","push","some","isInteger","reduce","b","forEach","processScores","scores","procScores","gameCount","order","handleScoreInput","r","ind","handleCallInput","_this$state","userInput","playerNum","defineProperty","rows","scoreRow_ScoreRow","key","uuid","v4","errorMessages","className","Helmet","charSet","height","textAlign","minHeight","display","justifyContent","button_Button","tableHead_TableHead","border","scoreInput_ScoreInput","tableBottom_TableBottom","href","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.e3be6830.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  border: 1px solid black;\n  outline: none;\n  padding: 5px;\n  color: white;\n  border-radius: 5px;\n  background-color: ${props => (props.allowClick ? \"#166730\" : \"gray\")};\n  font-size: 1em;\n  width: 120px;\n  height: 50px;\n  margin-right: 20px;\n  margin-left: 20px;\n  &:hover {\n    background: ${props => (props.allowClick ? \"green\" : \"gray\")};\n    cursor: ${props => (props.allowClick ? \"pointer\" : \"none\")};\n  }\n`;\n\nexport default class Button extends React.Component {\n  handleClick = () => {\n    this.props.onClick();\n  };\n\n  render() {\n    return (\n      <StyledButton\n        onClick={this.handleClick}\n        allowClick={this.props.allowClick}\n      >\n        {this.props.label}\n      </StyledButton>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = styled.input`\n  text-align: center;\n  border: none;\n  width: 97%;\n  height: 80%;\n  margin: auto;\n  display: block;\n  font-size: 1em;\n  background-color: ${props => (props.valid ? \"#286cc440\" : \"#d75d5d\")};\n  &:focus {\n    outline: solid 1px #2962ff;\n  }\n`;\n\nexport default class ScoreInput extends React.Component {\n  state = { value: \"\", placeholder: \"0\", valid: true };\n  handleChange = event => {\n    const [min, max] = this.props.gameState === \"call\" ? [1, 8] : [0, 13];\n    const val = Number(event.target.value);\n    if (val < min || val > max || isNaN(val)) {\n      this.setState({ valid: false });\n    } else {\n      this.setState({ valid: true });\n    }\n    this.setState({ value: event.target.value });\n    this.props.onChange(this.props.id, event.target.value);\n  };\n  handleBlur = () => {\n    this.setState({ placeholder: \"0\" });\n  };\n  handleFocus = () => {\n    this.setState({ placeholder: \"\" });\n    this.setState({ value: \"\" });\n  };\n  render() {\n    return (\n      <Input\n        id={this.props.id}\n        type=\"tel\"\n        placeholder={this.state.placeholder}\n        value={this.state.value}\n        onChange={this.handleChange}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        valid={this.state.valid}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = styled.input`\n  text-align: center;\n  outline: none;\n  border: none;\n  width: calc(100% - 10px);\n  padding: 5px;\n  height: 30px;\n  font-size: 1em;\n  font-weight: 700;\n  color: ${props => (props.editing ? \"white\" : \"#2962ff\")};\n  background-color: ${props => (props.editing ? \"#286cc440\" : \"white\")};\n  &:hover {\n    cursor: ${props => (props.editing ? \"initial\" : \"pointer\")};\n  }\n`;\n\nexport default class PlayerName extends React.Component {\n  state = {\n    value: this.props.name,\n    editing: false\n  };\n\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n  };\n  handleFocus = event => {\n    event.target.select();\n    this.setState({ editing: true });\n  };\n  handleBlur = event => {\n    this.setState({ editing: false });\n  };\n  render() {\n    return (\n      <Input\n        data-tip\n        data-for=\"change-name-message\"\n        onChange={this.handleChange}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        value={this.state.value}\n        editing={this.state.editing}\n        title=\"Click to edit\"\n      />\n    );\n  }\n}\n","import React from \"react\";\n\nimport PlayerName from \"./playerName\";\nimport styled from \"styled-components\";\n\nconst HeaderCell = styled.td`\n  text-align: center;\n  border: 1px solid;\n`;\n\nexport default class TableHead extends React.Component {\n  render() {\n    return (\n      <thead>\n        <tr>\n          <HeaderCell width=\"100\">\n            <strong>Game</strong>\n          </HeaderCell>\n          <HeaderCell>\n            <PlayerName name=\"p1\" />\n          </HeaderCell>\n          <HeaderCell>\n            <PlayerName name=\"p2\" />\n          </HeaderCell>\n          <HeaderCell>\n            <PlayerName name=\"p3\" />\n          </HeaderCell>\n          <HeaderCell>\n            <PlayerName name=\"p4\" />\n          </HeaderCell>\n        </tr>\n      </thead>\n    );\n  }\n}\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nconst HeaderCell = styled.td`\n  text-align: center;\n  padding: 3px;\n  height: 35px;\n  border: solid 1px black;\n`;\n\nexport default class TableBottom extends React.Component {\n  render() {\n    let sum = [0, 0, 0, 0];\n    for (let i = 0; i < this.props.processedScores.length; i++) {\n      sum[0] = Number(sum[0]) + Number(this.props.processedScores[i][0]);\n      sum[1] = Number(sum[1]) + Number(this.props.processedScores[i][1]);\n      sum[2] = Number(sum[2]) + Number(this.props.processedScores[i][2]);\n      sum[3] = Number(sum[3]) + Number(this.props.processedScores[i][3]);\n    }\n    return (\n      <tr>\n        <HeaderCell width=\"120\">\n          <strong>Total</strong>\n        </HeaderCell>\n        <HeaderCell>\n          <strong>{sum[0]}</strong>\n        </HeaderCell>\n        <HeaderCell>\n          <strong>{sum[1]}</strong>\n        </HeaderCell>\n        <HeaderCell>\n          <strong>{sum[2]}</strong>\n        </HeaderCell>\n        <HeaderCell>\n          <strong>{sum[3]}</strong>\n        </HeaderCell>\n      </tr>\n    );\n  }\n}\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nconst GameCell = styled.td`\n  text-align: center;\n  padding: 3px;\n`;\n\nconst CallSpan = styled.span`\n  margin-right: 0.6em;\n  font-size: 0.9em;\n  text-decoration: line-through;\n  font-style: italic;\n  color: #e6ee9c;\n`;\n\nconst ScoreSpan = styled.span`\n  font-size: 1em;\n  font-weight: 700;\n  padding-left: 2px;\n  padding-right: 2px;\n  color: ${props => (props.negative ? \"#ff7070\" : \"inherit\")};\n  border-radius: ${props => (props.negative ? \"2px\" : \"inherit\")};\n`;\n\nexport default class ScoreRow extends React.Component {\n  render() {\n    let i = this.props.gameNumber;\n    let val = [];\n    let callValue = [];\n    let bg = \"#1976d2\";\n    let fc = \"white\";\n    let fs = \"none\";\n    let negative = [];\n    if (this.props.processedScores[i]) {\n      val = this.props.processedScores[i];\n      negative = this.props.processedScores[i].map(el => el < 0);\n      callValue = this.props.calls[i];\n    } else {\n      val = this.props.calls[i];\n      callValue = [\"\", \"\", \"\", \"\"];\n      bg = \"#bbdefb\";\n      fc = \"black\";\n      fs = \"italic\";\n    }\n\n    /*let scores = [];\n    scores.push(\n      <GameCell>\n        {[\"i\", \"ii\", \"iii\", \"iv\", \"Final\"][this.props.gameNumber]}\n      </GameCell>\n    );\n    for (let ind = 0; ind < 4; i++) {\n      scores.push(\n        <GameCell>\n          <CallSpan>{callValue[ind]}</CallSpan>\n          <ScoreSpan negative={negative[ind]}>{val[ind]}</ScoreSpan>\n        </GameCell>\n      );\n    }*/\n\n    return (\n      <tr style={{ backgroundColor: bg, color: fc, fontStyle: fs }}>\n        <GameCell>\n          {[\"i\", \"ii\", \"iii\", \"iv\", \"Final\"][this.props.gameNumber]}\n        </GameCell>\n\n        <GameCell>\n          <CallSpan>{callValue[0]}</CallSpan>\n          <ScoreSpan negative={negative[0]}>{val[0]}</ScoreSpan>\n        </GameCell>\n        <GameCell>\n          <CallSpan>{callValue[1]}</CallSpan>\n          <ScoreSpan negative={negative[1]}>{val[1]}</ScoreSpan>\n        </GameCell>\n        <GameCell>\n          <CallSpan>{callValue[2]}</CallSpan>\n          <ScoreSpan negative={negative[2]}>{val[2]}</ScoreSpan>\n        </GameCell>\n        <GameCell>\n          <CallSpan>{callValue[3]}</CallSpan>\n          <ScoreSpan negative={negative[3]}>{val[3]}</ScoreSpan>\n        </GameCell>\n      </tr>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport Button from \"./components/button\";\nimport ScoreInput from \"./components/scoreInput\";\nimport TableHead from \"./components/tableHead\";\nimport TableBottom from \"./components/tableBottom\";\nimport ScoreRow from \"./components/scoreRow\";\nimport uuid from \"uuid\";\nimport { Helmet } from \"react-helmet\";\n\nimport \"./styles.css\";\n\nconst InputCell = styled.td`\n  min-width: 50px;\n  height: 30px;\n  border: 1px solid;\n`;\n\nconst ErrorDiv = styled.div`\n  color: red;\n  display: ${props => (props.error ? \"block\" : \"none\")};\n`;\n\nexport default class App extends React.Component {\n  state = {\n    round: 0,\n    roundComplete: false,\n    gameNumber: 0,\n    gameState: \"call\",\n    label: \"Record Calls\",\n    p1: 0,\n    p2: 0,\n    p3: 0,\n    p4: 0,\n    allowClick: true,\n    error: false,\n    messages: []\n  };\n  rounds = { p1: [], p2: [], p3: [], p4: [] };\n  playerCalls = [];\n  playerScores = [];\n  processedScores = [];\n  newRound = () => {\n    this.setState({\n      round: this.state.round + 1,\n      roundComplete: false,\n      gameNumber: 0,\n      gameState: \"call\",\n      label: \"Record Calls\",\n      p1: 0,\n      p2: 0,\n      p3: 0,\n      p4: 0,\n      allowClick: true,\n      messages: [],\n      error: false\n    });\n    this.playerCalls = [];\n    this.playerScores = [];\n    this.processedScores = [];\n  };\n\n  isValid = ar => {\n    let [minimum, maximum, total] =\n      this.state.gameState === \"call\" ? [1, 8, 32] : [0, 13, 13];\n    let valName = this.state.gameState === \"call\" ? \"calls\" : \"hands\";\n    let allMessages = [\n      \"each input for \" + valName + \" must be an integer.\",\n      \"each input for \" +\n        valName +\n        \" must be greater than than \" +\n        minimum +\n        \".\",\n      \"each input for \" + valName + \" must be smaller than \" + maximum + \".\",\n      this.state.gameState === \"call\"\n        ? \"total of calls must be smaller than \" + total + \".\"\n        : \"total of hands must be equal to 13.\"\n    ];\n    let check = [];\n    let messages = [];\n    check.push(ar.some(el => !Number.isInteger(Number(el))));\n    check.push(ar.some(el => Number(el) < minimum));\n    check.push(ar.some(el => Number(el) > maximum));\n\n    if (this.state.gameState === \"call\") {\n      check.push(ar.reduce((a, b) => Number(a) + Number(b), 0) > total);\n    } else {\n      check.push(ar.reduce((a, b) => Number(a) + Number(b), 0) !== total);\n    }\n\n    check.forEach((el, i) => {\n      if (el) {\n        messages.push(allMessages[i]);\n      }\n    });\n    this.setState({ messages: messages });\n    return !check.some(el => el);\n  };\n\n  processScores = (scores, calls) => {\n    let procScores = [];\n    for (let i = 0; i < scores.length; i++) {\n      if (Number(scores[i]) >= Number(calls[i])) {\n        procScores[i] = calls[i] + \".\" + (Number(scores[i]) - Number(calls[i]));\n      } else {\n        procScores[i] = -1 * Number(calls[i]);\n      }\n    }\n    return procScores;\n  };\n\n  gameCount = 5;\n  order = [\"p1\", \"p2\", \"p3\", \"p4\"];\n  handleScoreInput = ar => {\n    if (this.isValid(ar)) {\n      this.setState({ gameNumber: this.state.gameNumber + 1, error: false });\n      let procScores = this.processScores(\n        ar,\n        this.playerCalls[this.playerCalls.length - 1]\n      );\n      this.playerScores.push(ar);\n      this.processedScores.push(procScores);\n      if (this.state.gameNumber < this.gameCount - 1) {\n        this.setState({ label: \"Record Calls\" });\n      } else {\n        this.setState({\n          label: \"Game Over!!!\",\n          roundComplete: true,\n          allowClick: false\n        });\n\n        let totals = this.processedScores.reduce(\n          (r, a) => a.map((b, i) => Number(r[i] || 0) + Number(b)),\n          []\n        );\n        totals.map((val, ind) => this.rounds[this.order[ind]].push(val));\n      }\n      this.setState({ gameState: \"call\" });\n    } else {\n      this.setState({ error: true });\n    }\n  };\n\n  handleCallInput = ar => {\n    if (this.isValid(ar)) {\n      this.setState({\n        gameState: \"play\",\n        label: \"Record Hands\",\n        error: false\n      });\n      this.playerCalls.push(ar);\n    } else {\n      this.setState({ error: true });\n    }\n  };\n\n  handleClick = () => {\n    if (this.state.label === \"Game Over!!!\") {\n      return;\n    }\n    const { p1, p2, p3, p4 } = this.state;\n    const userInput = [p1, p2, p3, p4];\n    this.state.gameState === \"call\"\n      ? this.handleCallInput(userInput)\n      : this.handleScoreInput(userInput);\n  };\n\n  handleChange = (playerNum, value) => {\n    this.setState({ [playerNum]: value });\n  };\n\n  render() {\n    let rows = [];\n\n    for (let i = 0; i < this.playerCalls.length; i++) {\n      rows.push(\n        <ScoreRow\n          key={uuid.v4()}\n          gameNumber={i}\n          calls={this.playerCalls}\n          processedScores={this.processedScores}\n        />\n      );\n    }\n\n    let errorMessages = [];\n    for (let i = 0; i < this.state.messages.length; i++) {\n      errorMessages.push(<li key={uuid.v4()}>{this.state.messages[i]}</li>);\n    }\n\n    return (\n      <div className=\"App\">\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Callbreak</title>\n        </Helmet>\n        <header style={{ height: \"60px\", textAlign: \"left\", width: \"100%\" }}>\n          <h1>Callbreak</h1>\n        </header>\n        <div style={{ minHeight: \"calc(100vh - 150px)\" }}>\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button\n              label={this.state.label}\n              allowClick={this.state.allowClick}\n              onClick={this.handleClick}\n            />\n            <Button\n              label=\"New Round\"\n              allowClick={true}\n              onClick={this.newRound}\n            />\n          </div>\n          <hr />\n          <table>\n            <TableHead />\n            <tbody>\n              <tr key={\"Round\" + this.state.round}>\n                <td style={{ textAlign: \"center\", border: \"solid 1px black\" }}>\n                  Ongoing\n                </td>\n                <InputCell>\n                  <ScoreInput\n                    id=\"p1\"\n                    gameState={this.state.gameState}\n                    onChange={this.handleChange}\n                  />\n                </InputCell>\n                <InputCell>\n                  <ScoreInput\n                    id=\"p2\"\n                    gameState={this.state.gameState}\n                    onChange={this.handleChange}\n                  />\n                </InputCell>\n                <InputCell>\n                  <ScoreInput\n                    id=\"p3\"\n                    gameState={this.state.gameState}\n                    onChange={this.handleChange}\n                  />\n                </InputCell>\n                <InputCell>\n                  <ScoreInput\n                    id=\"p4\"\n                    gameState={this.state.gameState}\n                    onChange={this.handleChange}\n                  />\n                </InputCell>\n              </tr>\n              {rows}\n              <TableBottom processedScores={this.processedScores} />\n            </tbody>\n          </table>\n          <ErrorDiv error={this.state.error}>\n            <h3>The input is not valid.</h3>\n            <ul>{errorMessages}</ul>\n          </ErrorDiv>\n        </div>\n        <footer style={{ height: \"60px\", textAlign: \"center\" }}>\n          Made by <a href=\"https://www.darshanbaral.com\">Darshan</a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}